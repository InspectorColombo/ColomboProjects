
CurrentSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000330  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00000330  000003c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080006e  0080006e  000003d2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000404  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000420  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003e8  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f2  00000000  00000000  00000c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000169  00000000  00000000  00000d3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	e0 e3       	ldi	r30, 0x30	; 48
  32:	f3 e0       	ldi	r31, 0x03	; 3
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	ae 36       	cpi	r26, 0x6E	; 110
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	ae e6       	ldi	r26, 0x6E	; 110
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	af 36       	cpi	r26, 0x6F	; 111
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	1f d1       	rcall	.+574    	; 0x290 <main>
  52:	6c c1       	rjmp	.+728    	; 0x32c <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <DelayMicroSec>:
  56:	88 23       	and	r24, r24
  58:	39 f0       	breq	.+14     	; 0x68 <DelayMicroSec+0x12>
	...
  62:	00 00       	nop
  64:	81 50       	subi	r24, 0x01	; 1
  66:	f7 cf       	rjmp	.-18     	; 0x56 <DelayMicroSec>
  68:	08 95       	ret

0000006a <DelayMiliSec>:
  6a:	cf 93       	push	r28
  6c:	df 93       	push	r29
  6e:	ec 01       	movw	r28, r24
  70:	20 97       	sbiw	r28, 0x00	; 0
  72:	51 f0       	breq	.+20     	; 0x88 <DelayMiliSec+0x1e>
  74:	8a ef       	ldi	r24, 0xFA	; 250
  76:	ef df       	rcall	.-34     	; 0x56 <DelayMicroSec>
  78:	8a ef       	ldi	r24, 0xFA	; 250
  7a:	ed df       	rcall	.-38     	; 0x56 <DelayMicroSec>
  7c:	8a ef       	ldi	r24, 0xFA	; 250
  7e:	eb df       	rcall	.-42     	; 0x56 <DelayMicroSec>
  80:	8a ef       	ldi	r24, 0xFA	; 250
  82:	e9 df       	rcall	.-46     	; 0x56 <DelayMicroSec>
  84:	21 97       	sbiw	r28, 0x01	; 1
  86:	f4 cf       	rjmp	.-24     	; 0x70 <DelayMiliSec+0x6>
  88:	df 91       	pop	r29
  8a:	cf 91       	pop	r28
  8c:	08 95       	ret

0000008e <InitVoltageADC>:
  8e:	bb 98       	cbi	0x17, 3	; 23
  90:	c3 98       	cbi	0x18, 3	; 24
  92:	83 e0       	ldi	r24, 0x03	; 3
  94:	87 b9       	out	0x07, r24	; 7
  96:	86 e9       	ldi	r24, 0x96	; 150
  98:	86 b9       	out	0x06, r24	; 6
  9a:	83 b1       	in	r24, 0x03	; 3
  9c:	80 74       	andi	r24, 0x40	; 64
  9e:	83 b9       	out	0x03, r24	; 3
  a0:	a2 9a       	sbi	0x14, 2	; 20
  a2:	08 95       	ret

000000a4 <StartAdcConversion>:
  a4:	34 9a       	sbi	0x06, 4	; 6
  a6:	36 9a       	sbi	0x06, 6	; 6
  a8:	34 9b       	sbis	0x06, 4	; 6
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <StartAdcConversion+0x4>
  ac:	34 9a       	sbi	0x06, 4	; 6
  ae:	24 b1       	in	r18, 0x04	; 4
  b0:	85 b1       	in	r24, 0x05	; 5
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	98 2f       	mov	r25, r24
  b6:	88 27       	eor	r24, r24
  b8:	82 0f       	add	r24, r18
  ba:	91 1d       	adc	r25, r1
  bc:	08 95       	ret

000000be <GetVoltageAdcValueInMv>:
  be:	cf 92       	push	r12
  c0:	df 92       	push	r13
  c2:	ef 92       	push	r14
  c4:	ff 92       	push	r15
  c6:	0f 93       	push	r16
  c8:	1f 93       	push	r17
  ca:	cf 93       	push	r28
  cc:	df 93       	push	r29
  ce:	ec 01       	movw	r28, r24
  d0:	c7 36       	cpi	r28, 0x67	; 103
  d2:	81 e2       	ldi	r24, 0x21	; 33
  d4:	d8 07       	cpc	r29, r24
  d6:	10 f0       	brcs	.+4      	; 0xdc <GetVoltageAdcValueInMv+0x1e>
  d8:	c6 e6       	ldi	r28, 0x66	; 102
  da:	d1 e2       	ldi	r29, 0x21	; 33
  dc:	d8 df       	rcall	.-80     	; 0x8e <InitVoltageADC>
  de:	e2 df       	rcall	.-60     	; 0xa4 <StartAdcConversion>
  e0:	00 e0       	ldi	r16, 0x00	; 0
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	c1 2c       	mov	r12, r1
  e6:	d1 2c       	mov	r13, r1
  e8:	76 01       	movw	r14, r12
  ea:	0c 17       	cp	r16, r28
  ec:	1d 07       	cpc	r17, r29
  ee:	41 f0       	breq	.+16     	; 0x100 <__DATA_REGION_LENGTH__>
  f0:	d9 df       	rcall	.-78     	; 0xa4 <StartAdcConversion>
  f2:	c8 0e       	add	r12, r24
  f4:	d9 1e       	adc	r13, r25
  f6:	e1 1c       	adc	r14, r1
  f8:	f1 1c       	adc	r15, r1
  fa:	0f 5f       	subi	r16, 0xFF	; 255
  fc:	1f 4f       	sbci	r17, 0xFF	; 255
  fe:	f5 cf       	rjmp	.-22     	; 0xea <GetVoltageAdcValueInMv+0x2c>
 100:	2b ee       	ldi	r18, 0xEB	; 235
 102:	31 e0       	ldi	r19, 0x01	; 1
 104:	40 e0       	ldi	r20, 0x00	; 0
 106:	50 e0       	ldi	r21, 0x00	; 0
 108:	c7 01       	movw	r24, r14
 10a:	b6 01       	movw	r22, r12
 10c:	d4 d0       	rcall	.+424    	; 0x2b6 <__mulsi3>
 10e:	29 e1       	ldi	r18, 0x19	; 25
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	40 e0       	ldi	r20, 0x00	; 0
 114:	50 e0       	ldi	r21, 0x00	; 0
 116:	e8 d0       	rcall	.+464    	; 0x2e8 <__udivmodsi4>
 118:	ca 01       	movw	r24, r20
 11a:	b9 01       	movw	r22, r18
 11c:	98 01       	movw	r18, r16
 11e:	40 e0       	ldi	r20, 0x00	; 0
 120:	50 e0       	ldi	r21, 0x00	; 0
 122:	e2 d0       	rcall	.+452    	; 0x2e8 <__udivmodsi4>
 124:	c9 01       	movw	r24, r18
 126:	40 96       	adiw	r24, 0x10	; 16
 128:	df 91       	pop	r29
 12a:	cf 91       	pop	r28
 12c:	1f 91       	pop	r17
 12e:	0f 91       	pop	r16
 130:	ff 90       	pop	r15
 132:	ef 90       	pop	r14
 134:	df 90       	pop	r13
 136:	cf 90       	pop	r12
 138:	08 95       	ret

0000013a <SwUartOneBitDelay>:
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	10 91 6e 00 	lds	r17, 0x006E	; 0x80006e <__data_end>
 142:	00 00       	nop
 144:	00 00       	nop
 146:	09 e0       	ldi	r16, 0x09	; 9

00000148 <SW_UART_DELAY_L1>:
 148:	00 00       	nop
 14a:	00 00       	nop
 14c:	0a 95       	dec	r16
 14e:	e1 f7       	brne	.-8      	; 0x148 <SW_UART_DELAY_L1>
 150:	0c e0       	ldi	r16, 0x0C	; 12
 152:	0f 93       	push	r16
 154:	0f 91       	pop	r16
 156:	1a 95       	dec	r17
 158:	b9 f7       	brne	.-18     	; 0x148 <SW_UART_DELAY_L1>
 15a:	1f 91       	pop	r17
 15c:	0f 91       	pop	r16
 15e:	08 95       	ret

00000160 <SetOsccal>:
 160:	91 b7       	in	r25, 0x31	; 49
 162:	98 17       	cp	r25, r24
 164:	91 f0       	breq	.+36     	; 0x18a <SetOsccal+0x2a>
 166:	98 17       	cp	r25, r24
 168:	10 f4       	brcc	.+4      	; 0x16e <SetOsccal+0xe>
 16a:	9f 5f       	subi	r25, 0xFF	; 255
 16c:	01 c0       	rjmp	.+2      	; 0x170 <SetOsccal+0x10>
 16e:	91 50       	subi	r25, 0x01	; 1
 170:	91 bf       	out	0x31, r25	; 49
 172:	9f ef       	ldi	r25, 0xFF	; 255
	...
 184:	91 50       	subi	r25, 0x01	; 1
 186:	b1 f7       	brne	.-20     	; 0x174 <SetOsccal+0x14>
 188:	eb cf       	rjmp	.-42     	; 0x160 <SetOsccal>
 18a:	08 95       	ret

0000018c <SwUartInit>:
 18c:	cf 93       	push	r28
 18e:	c8 2f       	mov	r28, r24
 190:	83 ea       	ldi	r24, 0xA3	; 163
 192:	e6 df       	rcall	.-52     	; 0x160 <SetOsccal>
 194:	c0 93 6e 00 	sts	0x006E, r28	; 0x80006e <__data_end>
 198:	c0 9a       	sbi	0x18, 0	; 24
 19a:	b8 9a       	sbi	0x17, 0	; 23
 19c:	cf 91       	pop	r28
 19e:	08 95       	ret

000001a0 <SwUartSendByte>:
 1a0:	cf 93       	push	r28
 1a2:	df 93       	push	r29
 1a4:	c8 2f       	mov	r28, r24
 1a6:	c0 98       	cbi	0x18, 0	; 24
 1a8:	c8 df       	rcall	.-112    	; 0x13a <SwUartOneBitDelay>
 1aa:	d8 e0       	ldi	r29, 0x08	; 8
 1ac:	c0 ff       	sbrs	r28, 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <SwUartSendByte+0x14>
 1b0:	c0 9a       	sbi	0x18, 0	; 24
 1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <SwUartSendByte+0x16>
 1b4:	c0 98       	cbi	0x18, 0	; 24
 1b6:	c1 df       	rcall	.-126    	; 0x13a <SwUartOneBitDelay>
 1b8:	c6 95       	lsr	r28
 1ba:	d1 50       	subi	r29, 0x01	; 1
 1bc:	b9 f7       	brne	.-18     	; 0x1ac <SwUartSendByte+0xc>
 1be:	c0 9a       	sbi	0x18, 0	; 24
 1c0:	bc df       	rcall	.-136    	; 0x13a <SwUartOneBitDelay>
 1c2:	bb df       	rcall	.-138    	; 0x13a <SwUartOneBitDelay>
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <SwUartPrintString>:
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	ec 01       	movw	r28, r24
 1d0:	89 91       	ld	r24, Y+
 1d2:	88 23       	and	r24, r24
 1d4:	11 f0       	breq	.+4      	; 0x1da <SwUartPrintString+0x10>
 1d6:	e4 df       	rcall	.-56     	; 0x1a0 <SwUartSendByte>
 1d8:	fb cf       	rjmp	.-10     	; 0x1d0 <SwUartPrintString+0x6>
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	08 95       	ret

000001e0 <SwUartPrintLong>:
 1e0:	8f 92       	push	r8
 1e2:	9f 92       	push	r9
 1e4:	af 92       	push	r10
 1e6:	bf 92       	push	r11
 1e8:	0f 93       	push	r16
 1ea:	1f 93       	push	r17
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	cd b7       	in	r28, 0x3d	; 61
 1f2:	de b7       	in	r29, 0x3e	; 62
 1f4:	2a 97       	sbiw	r28, 0x0a	; 10
 1f6:	0f b6       	in	r0, 0x3f	; 63
 1f8:	f8 94       	cli
 1fa:	de bf       	out	0x3e, r29	; 62
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	cd bf       	out	0x3d, r28	; 61
 200:	19 e0       	ldi	r17, 0x09	; 9
 202:	2a e0       	ldi	r18, 0x0A	; 10
 204:	82 2e       	mov	r8, r18
 206:	91 2c       	mov	r9, r1
 208:	a1 2c       	mov	r10, r1
 20a:	b1 2c       	mov	r11, r1
 20c:	61 15       	cp	r22, r1
 20e:	71 05       	cpc	r23, r1
 210:	81 05       	cpc	r24, r1
 212:	91 05       	cpc	r25, r1
 214:	81 f0       	breq	.+32     	; 0x236 <SwUartPrintLong+0x56>
 216:	a5 01       	movw	r20, r10
 218:	94 01       	movw	r18, r8
 21a:	66 d0       	rcall	.+204    	; 0x2e8 <__udivmodsi4>
 21c:	a6 2f       	mov	r26, r22
 21e:	b9 01       	movw	r22, r18
 220:	ca 01       	movw	r24, r20
 222:	19 30       	cpi	r17, 0x09	; 9
 224:	59 f0       	breq	.+22     	; 0x23c <SwUartPrintLong+0x5c>
 226:	a1 11       	cpse	r26, r1
 228:	09 c0       	rjmp	.+18     	; 0x23c <SwUartPrintLong+0x5c>
 22a:	61 15       	cp	r22, r1
 22c:	71 05       	cpc	r23, r1
 22e:	81 05       	cpc	r24, r1
 230:	91 05       	cpc	r25, r1
 232:	21 f4       	brne	.+8      	; 0x23c <SwUartPrintLong+0x5c>
 234:	04 c0       	rjmp	.+8      	; 0x23e <SwUartPrintLong+0x5e>
 236:	a0 e0       	ldi	r26, 0x00	; 0
 238:	19 30       	cpi	r17, 0x09	; 9
 23a:	09 f4       	brne	.+2      	; 0x23e <SwUartPrintLong+0x5e>
 23c:	a0 5d       	subi	r26, 0xD0	; 208
 23e:	e1 e0       	ldi	r30, 0x01	; 1
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	ec 0f       	add	r30, r28
 244:	fd 1f       	adc	r31, r29
 246:	e1 0f       	add	r30, r17
 248:	f1 1d       	adc	r31, r1
 24a:	a0 83       	st	Z, r26
 24c:	11 23       	and	r17, r17
 24e:	11 f0       	breq	.+4      	; 0x254 <SwUartPrintLong+0x74>
 250:	11 50       	subi	r17, 0x01	; 1
 252:	dc cf       	rjmp	.-72     	; 0x20c <SwUartPrintLong+0x2c>
 254:	8e 01       	movw	r16, r28
 256:	0f 5f       	subi	r16, 0xFF	; 255
 258:	1f 4f       	sbci	r17, 0xFF	; 255
 25a:	5e 01       	movw	r10, r28
 25c:	8b e0       	ldi	r24, 0x0B	; 11
 25e:	a8 0e       	add	r10, r24
 260:	b1 1c       	adc	r11, r1
 262:	f8 01       	movw	r30, r16
 264:	81 91       	ld	r24, Z+
 266:	8f 01       	movw	r16, r30
 268:	81 11       	cpse	r24, r1
 26a:	9a df       	rcall	.-204    	; 0x1a0 <SwUartSendByte>
 26c:	a0 16       	cp	r10, r16
 26e:	b1 06       	cpc	r11, r17
 270:	c1 f7       	brne	.-16     	; 0x262 <SwUartPrintLong+0x82>
 272:	2a 96       	adiw	r28, 0x0a	; 10
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	1f 91       	pop	r17
 284:	0f 91       	pop	r16
 286:	bf 90       	pop	r11
 288:	af 90       	pop	r10
 28a:	9f 90       	pop	r9
 28c:	8f 90       	pop	r8
 28e:	08 95       	ret

00000290 <main>:
 290:	82 e0       	ldi	r24, 0x02	; 2
 292:	7c df       	rcall	.-264    	; 0x18c <SwUartInit>
 294:	80 e6       	ldi	r24, 0x60	; 96
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	98 df       	rcall	.-208    	; 0x1ca <SwUartPrintString>
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0f df       	rcall	.-482    	; 0xbe <GetVoltageAdcValueInMv>
 2a0:	bc 01       	movw	r22, r24
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	9c df       	rcall	.-200    	; 0x1e0 <SwUartPrintLong>
 2a8:	8a e6       	ldi	r24, 0x6A	; 106
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	8e df       	rcall	.-228    	; 0x1ca <SwUartPrintString>
 2ae:	84 ef       	ldi	r24, 0xF4	; 244
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	db de       	rcall	.-586    	; 0x6a <DelayMiliSec>
 2b4:	ef cf       	rjmp	.-34     	; 0x294 <main+0x4>

000002b6 <__mulsi3>:
 2b6:	ee 27       	eor	r30, r30
 2b8:	ff 27       	eor	r31, r31

000002ba <__mulsi3_helper>:
 2ba:	aa 27       	eor	r26, r26
 2bc:	bb 27       	eor	r27, r27
 2be:	08 c0       	rjmp	.+16     	; 0x2d0 <__mulsi3_helper+0x16>
 2c0:	a2 0f       	add	r26, r18
 2c2:	b3 1f       	adc	r27, r19
 2c4:	e4 1f       	adc	r30, r20
 2c6:	f5 1f       	adc	r31, r21
 2c8:	22 0f       	add	r18, r18
 2ca:	33 1f       	adc	r19, r19
 2cc:	44 1f       	adc	r20, r20
 2ce:	55 1f       	adc	r21, r21
 2d0:	96 95       	lsr	r25
 2d2:	87 95       	ror	r24
 2d4:	77 95       	ror	r23
 2d6:	67 95       	ror	r22
 2d8:	98 f3       	brcs	.-26     	; 0x2c0 <__mulsi3_helper+0x6>
 2da:	70 40       	sbci	r23, 0x00	; 0
 2dc:	a9 f7       	brne	.-22     	; 0x2c8 <__mulsi3_helper+0xe>
 2de:	00 97       	sbiw	r24, 0x00	; 0
 2e0:	99 f7       	brne	.-26     	; 0x2c8 <__mulsi3_helper+0xe>
 2e2:	bd 01       	movw	r22, r26
 2e4:	cf 01       	movw	r24, r30
 2e6:	08 95       	ret

000002e8 <__udivmodsi4>:
 2e8:	a1 e2       	ldi	r26, 0x21	; 33
 2ea:	1a 2e       	mov	r1, r26
 2ec:	aa 1b       	sub	r26, r26
 2ee:	bb 1b       	sub	r27, r27
 2f0:	fd 01       	movw	r30, r26
 2f2:	0d c0       	rjmp	.+26     	; 0x30e <__udivmodsi4_ep>

000002f4 <__udivmodsi4_loop>:
 2f4:	aa 1f       	adc	r26, r26
 2f6:	bb 1f       	adc	r27, r27
 2f8:	ee 1f       	adc	r30, r30
 2fa:	ff 1f       	adc	r31, r31
 2fc:	a2 17       	cp	r26, r18
 2fe:	b3 07       	cpc	r27, r19
 300:	e4 07       	cpc	r30, r20
 302:	f5 07       	cpc	r31, r21
 304:	20 f0       	brcs	.+8      	; 0x30e <__udivmodsi4_ep>
 306:	a2 1b       	sub	r26, r18
 308:	b3 0b       	sbc	r27, r19
 30a:	e4 0b       	sbc	r30, r20
 30c:	f5 0b       	sbc	r31, r21

0000030e <__udivmodsi4_ep>:
 30e:	66 1f       	adc	r22, r22
 310:	77 1f       	adc	r23, r23
 312:	88 1f       	adc	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	1a 94       	dec	r1
 318:	69 f7       	brne	.-38     	; 0x2f4 <__udivmodsi4_loop>
 31a:	60 95       	com	r22
 31c:	70 95       	com	r23
 31e:	80 95       	com	r24
 320:	90 95       	com	r25
 322:	9b 01       	movw	r18, r22
 324:	ac 01       	movw	r20, r24
 326:	bd 01       	movw	r22, r26
 328:	cf 01       	movw	r24, r30
 32a:	08 95       	ret

0000032c <_exit>:
 32c:	f8 94       	cli

0000032e <__stop_program>:
 32e:	ff cf       	rjmp	.-2      	; 0x32e <__stop_program>
