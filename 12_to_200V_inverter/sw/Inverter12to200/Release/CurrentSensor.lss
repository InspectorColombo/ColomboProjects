
CurrentSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  000002ee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000320  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000420  00000000  00000000  0000035c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003e8  00000000  00000000  0000077c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f2  00000000  00000000  00000b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000169  00000000  00000000  00000c56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	a2 36       	cpi	r26, 0x62	; 98
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	fb d0       	rcall	.+502    	; 0x232 <main>
  3c:	1c c1       	rjmp	.+568    	; 0x276 <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <DelayMicroSec>:
  40:	88 23       	and	r24, r24
  42:	39 f0       	breq	.+14     	; 0x52 <DelayMicroSec+0x12>
	...
  4c:	00 00       	nop
  4e:	81 50       	subi	r24, 0x01	; 1
  50:	f7 cf       	rjmp	.-18     	; 0x40 <DelayMicroSec>
  52:	08 95       	ret

00000054 <DelayMiliSec>:
  54:	cf 93       	push	r28
  56:	df 93       	push	r29
  58:	ec 01       	movw	r28, r24
  5a:	20 97       	sbiw	r28, 0x00	; 0
  5c:	51 f0       	breq	.+20     	; 0x72 <DelayMiliSec+0x1e>
  5e:	8a ef       	ldi	r24, 0xFA	; 250
  60:	ef df       	rcall	.-34     	; 0x40 <DelayMicroSec>
  62:	8a ef       	ldi	r24, 0xFA	; 250
  64:	ed df       	rcall	.-38     	; 0x40 <DelayMicroSec>
  66:	8a ef       	ldi	r24, 0xFA	; 250
  68:	eb df       	rcall	.-42     	; 0x40 <DelayMicroSec>
  6a:	8a ef       	ldi	r24, 0xFA	; 250
  6c:	e9 df       	rcall	.-46     	; 0x40 <DelayMicroSec>
  6e:	21 97       	sbiw	r28, 0x01	; 1
  70:	f4 cf       	rjmp	.-24     	; 0x5a <DelayMiliSec+0x6>
  72:	df 91       	pop	r29
  74:	cf 91       	pop	r28
  76:	08 95       	ret

00000078 <BuzzerOn>:
  78:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  7c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  80:	80 62       	ori	r24, 0x20	; 32
  82:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  86:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  8a:	08 95       	ret

0000008c <BuzzerOff>:
  8c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  90:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  94:	8f 7d       	andi	r24, 0xDF	; 223
  96:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  9a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  9e:	08 95       	ret

000000a0 <AddChargeVoltageOff>:
  a0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  a4:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  a8:	87 7f       	andi	r24, 0xF7	; 247
  aa:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ae:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  b2:	08 95       	ret

000000b4 <ConverterOff>:
  b4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  b8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  bc:	8f 7b       	andi	r24, 0xBF	; 191
  be:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  c2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  c6:	08 95       	ret

000000c8 <SenseBatteryVoltageOff>:
  c8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  cc:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  d0:	8f 77       	andi	r24, 0x7F	; 127
  d2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  d6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  da:	08 95       	ret

000000dc <LedVoltGreen2Off>:
  dc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  e0:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  e4:	9e 7f       	andi	r25, 0xFE	; 254
  e6:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  ea:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  ee:	08 95       	ret

000000f0 <LedVoltGreen1On>:
  f0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  f4:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  f8:	94 60       	ori	r25, 0x04	; 4
  fa:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  fe:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 102:	08 95       	ret

00000104 <LedVoltGreen1Off>:
 104:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 108:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 10c:	9b 7f       	andi	r25, 0xFB	; 251
 10e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 112:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 116:	08 95       	ret

00000118 <LedVoltYellowOff>:
 118:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 11c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 120:	9f 7e       	andi	r25, 0xEF	; 239
 122:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 126:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 12a:	08 95       	ret

0000012c <LedVoltRedOff>:
 12c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 130:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 134:	9f 7b       	andi	r25, 0xBF	; 191
 136:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 13a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 13e:	08 95       	ret

00000140 <LedCurrGreen2Off>:
 140:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 144:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 148:	9f 77       	andi	r25, 0x7F	; 127
 14a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 14e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 152:	08 95       	ret

00000154 <LedCurrGreen1Off>:
 154:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 158:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 15c:	9f 7d       	andi	r25, 0xDF	; 223
 15e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 162:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 166:	08 95       	ret

00000168 <LedCurrYellowOff>:
 168:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 16c:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 170:	97 7f       	andi	r25, 0xF7	; 247
 172:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 176:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 17a:	08 95       	ret

0000017c <LedCurrRedOff>:
 17c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 180:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 184:	9d 7f       	andi	r25, 0xFD	; 253
 186:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 18a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 18e:	08 95       	ret

00000190 <SendShiftRegisterWord>:
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	d8 2f       	mov	r29, r24
 196:	c9 2f       	mov	r28, r25
 198:	c1 98       	cbi	0x18, 1	; 24
 19a:	8c e3       	ldi	r24, 0x3C	; 60
 19c:	51 df       	rcall	.-350    	; 0x40 <DelayMicroSec>
 19e:	8d 2f       	mov	r24, r29
 1a0:	9c 2f       	mov	r25, r28
 1a2:	20 e1       	ldi	r18, 0x10	; 16
 1a4:	97 ff       	sbrs	r25, 7
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <SendShiftRegisterWord+0x1c>
 1a8:	c0 9a       	sbi	0x18, 0	; 24
 1aa:	01 c0       	rjmp	.+2      	; 0x1ae <SendShiftRegisterWord+0x1e>
 1ac:	c0 98       	cbi	0x18, 0	; 24
 1ae:	c1 9a       	sbi	0x18, 1	; 24
 1b0:	21 50       	subi	r18, 0x01	; 1
 1b2:	21 f0       	breq	.+8      	; 0x1bc <SendShiftRegisterWord+0x2c>
 1b4:	c1 98       	cbi	0x18, 1	; 24
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	f4 cf       	rjmp	.-24     	; 0x1a4 <SendShiftRegisterWord+0x14>
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	08 95       	ret

000001c2 <ShiftRegInit>:
 1c2:	c1 98       	cbi	0x18, 1	; 24
 1c4:	c0 98       	cbi	0x18, 0	; 24
 1c6:	87 b3       	in	r24, 0x17	; 23
 1c8:	83 60       	ori	r24, 0x03	; 3
 1ca:	87 bb       	out	0x17, r24	; 23
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	df cf       	rjmp	.-66     	; 0x190 <SendShiftRegisterWord>

000001d2 <ShiftRegPush>:
 1d2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1d6:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 1da:	da cf       	rjmp	.-76     	; 0x190 <SendShiftRegisterWord>

000001dc <StartTimer1DelayInMs>:
 1dc:	81 15       	cp	r24, r1
 1de:	22 e0       	ldi	r18, 0x02	; 2
 1e0:	92 07       	cpc	r25, r18
 1e2:	20 f4       	brcc	.+8      	; 0x1ec <StartTimer1DelayInMs+0x10>
 1e4:	96 95       	lsr	r25
 1e6:	87 95       	ror	r24
 1e8:	80 95       	com	r24
 1ea:	01 c0       	rjmp	.+2      	; 0x1ee <StartTimer1DelayInMs+0x12>
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	9f e0       	ldi	r25, 0x0F	; 15
 1f0:	90 bf       	out	0x30, r25	; 48
 1f2:	9c b5       	in	r25, 0x2c	; 44
 1f4:	93 78       	andi	r25, 0x83	; 131
 1f6:	9c bd       	out	0x2c, r25	; 44
 1f8:	1e bc       	out	0x2e, r1	; 46
 1fa:	1b bc       	out	0x2b, r1	; 43
 1fc:	9f ef       	ldi	r25, 0xFF	; 255
 1fe:	9d bd       	out	0x2d, r25	; 45
 200:	97 b5       	in	r25, 0x27	; 39
 202:	9b 7f       	andi	r25, 0xFB	; 251
 204:	97 bd       	out	0x27, r25	; 39
 206:	99 b7       	in	r25, 0x39	; 57
 208:	9f 7b       	andi	r25, 0xBF	; 191
 20a:	99 bf       	out	0x39, r25	; 57
 20c:	8f bd       	out	0x2f, r24	; 47
 20e:	88 b7       	in	r24, 0x38	; 56
 210:	84 60       	ori	r24, 0x04	; 4
 212:	88 bf       	out	0x38, r24	; 56
 214:	08 95       	ret

00000216 <IsTimer1DelayInMsElapsed>:
 216:	98 b7       	in	r25, 0x38	; 56
 218:	89 2f       	mov	r24, r25
 21a:	84 70       	andi	r24, 0x04	; 4
 21c:	92 ff       	sbrs	r25, 2
 21e:	04 c0       	rjmp	.+8      	; 0x228 <IsTimer1DelayInMsElapsed+0x12>
 220:	88 b7       	in	r24, 0x38	; 56
 222:	84 60       	ori	r24, 0x04	; 4
 224:	88 bf       	out	0x38, r24	; 56
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	08 95       	ret

0000022a <WaitTimer1DelayInMsElapsed>:
 22a:	f5 df       	rcall	.-22     	; 0x216 <IsTimer1DelayInMsElapsed>
 22c:	88 23       	and	r24, r24
 22e:	e9 f3       	breq	.-6      	; 0x22a <WaitTimer1DelayInMsElapsed>
 230:	08 95       	ret

00000232 <main>:
 232:	c7 df       	rcall	.-114    	; 0x1c2 <ShiftRegInit>
 234:	a3 df       	rcall	.-186    	; 0x17c <LedCurrRedOff>
 236:	98 df       	rcall	.-208    	; 0x168 <LedCurrYellowOff>
 238:	8d df       	rcall	.-230    	; 0x154 <LedCurrGreen1Off>
 23a:	82 df       	rcall	.-252    	; 0x140 <LedCurrGreen2Off>
 23c:	77 df       	rcall	.-274    	; 0x12c <LedVoltRedOff>
 23e:	6c df       	rcall	.-296    	; 0x118 <LedVoltYellowOff>
 240:	61 df       	rcall	.-318    	; 0x104 <LedVoltGreen1Off>
 242:	4c df       	rcall	.-360    	; 0xdc <LedVoltGreen2Off>
 244:	23 df       	rcall	.-442    	; 0x8c <BuzzerOff>
 246:	2c df       	rcall	.-424    	; 0xa0 <AddChargeVoltageOff>
 248:	35 df       	rcall	.-406    	; 0xb4 <ConverterOff>
 24a:	3e df       	rcall	.-388    	; 0xc8 <SenseBatteryVoltageOff>
 24c:	c2 df       	rcall	.-124    	; 0x1d2 <ShiftRegPush>
 24e:	14 df       	rcall	.-472    	; 0x78 <BuzzerOn>
 250:	c0 df       	rcall	.-128    	; 0x1d2 <ShiftRegPush>
 252:	88 ec       	ldi	r24, 0xC8	; 200
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	fe de       	rcall	.-516    	; 0x54 <DelayMiliSec>
 258:	19 df       	rcall	.-462    	; 0x8c <BuzzerOff>
 25a:	bb df       	rcall	.-138    	; 0x1d2 <ShiftRegPush>
 25c:	49 df       	rcall	.-366    	; 0xf0 <LedVoltGreen1On>
 25e:	b9 df       	rcall	.-142    	; 0x1d2 <ShiftRegPush>
 260:	8a e0       	ldi	r24, 0x0A	; 10
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	bb df       	rcall	.-138    	; 0x1dc <StartTimer1DelayInMs>
 266:	e1 df       	rcall	.-62     	; 0x22a <WaitTimer1DelayInMsElapsed>
 268:	4d df       	rcall	.-358    	; 0x104 <LedVoltGreen1Off>
 26a:	b3 df       	rcall	.-154    	; 0x1d2 <ShiftRegPush>
 26c:	8a e0       	ldi	r24, 0x0A	; 10
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	b5 df       	rcall	.-150    	; 0x1dc <StartTimer1DelayInMs>
 272:	db df       	rcall	.-74     	; 0x22a <WaitTimer1DelayInMsElapsed>
 274:	f3 cf       	rjmp	.-26     	; 0x25c <main+0x2a>

00000276 <_exit>:
 276:	f8 94       	cli

00000278 <__stop_program>:
 278:	ff cf       	rjmp	.-2      	; 0x278 <__stop_program>
