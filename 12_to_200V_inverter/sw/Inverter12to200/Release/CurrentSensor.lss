
CurrentSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  000001a0  00000234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800088  00800088  0000025c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000420  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003e8  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f2  00000000  00000000  00000ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000169  00000000  00000000  00000bc2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	28 c0       	rjmp	.+80     	; 0x54 <__bad_interrupt>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	e0 ea       	ldi	r30, 0xA0	; 160
  32:	f1 e0       	ldi	r31, 0x01	; 1
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	a8 38       	cpi	r26, 0x88	; 136
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	a8 e8       	ldi	r26, 0x88	; 136
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a9 38       	cpi	r26, 0x89	; 137
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	8b d0       	rcall	.+278    	; 0x168 <main>
  52:	a4 c0       	rjmp	.+328    	; 0x19c <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <DelayMicroSec>:
  56:	88 23       	and	r24, r24
  58:	39 f0       	breq	.+14     	; 0x68 <DelayMicroSec+0x12>
	...
  62:	00 00       	nop
  64:	81 50       	subi	r24, 0x01	; 1
  66:	f7 cf       	rjmp	.-18     	; 0x56 <DelayMicroSec>
  68:	08 95       	ret

0000006a <DelayMiliSec>:
  6a:	cf 93       	push	r28
  6c:	df 93       	push	r29
  6e:	ec 01       	movw	r28, r24
  70:	20 97       	sbiw	r28, 0x00	; 0
  72:	51 f0       	breq	.+20     	; 0x88 <DelayMiliSec+0x1e>
  74:	8a ef       	ldi	r24, 0xFA	; 250
  76:	ef df       	rcall	.-34     	; 0x56 <DelayMicroSec>
  78:	8a ef       	ldi	r24, 0xFA	; 250
  7a:	ed df       	rcall	.-38     	; 0x56 <DelayMicroSec>
  7c:	8a ef       	ldi	r24, 0xFA	; 250
  7e:	eb df       	rcall	.-42     	; 0x56 <DelayMicroSec>
  80:	8a ef       	ldi	r24, 0xFA	; 250
  82:	e9 df       	rcall	.-46     	; 0x56 <DelayMicroSec>
  84:	21 97       	sbiw	r28, 0x01	; 1
  86:	f4 cf       	rjmp	.-24     	; 0x70 <DelayMiliSec+0x6>
  88:	df 91       	pop	r29
  8a:	cf 91       	pop	r28
  8c:	08 95       	ret

0000008e <SwUartOneBitDelay>:
  8e:	0f 93       	push	r16
  90:	1f 93       	push	r17
  92:	10 91 88 00 	lds	r17, 0x0088	; 0x800088 <__data_end>
  96:	00 00       	nop
  98:	00 00       	nop
  9a:	09 e0       	ldi	r16, 0x09	; 9

0000009c <SW_UART_DELAY_L1>:
  9c:	00 00       	nop
  9e:	00 00       	nop
  a0:	0a 95       	dec	r16
  a2:	e1 f7       	brne	.-8      	; 0x9c <SW_UART_DELAY_L1>
  a4:	0c e0       	ldi	r16, 0x0C	; 12
  a6:	0f 93       	push	r16
  a8:	0f 91       	pop	r16
  aa:	1a 95       	dec	r17
  ac:	b9 f7       	brne	.-18     	; 0x9c <SW_UART_DELAY_L1>
  ae:	1f 91       	pop	r17
  b0:	0f 91       	pop	r16
  b2:	08 95       	ret

000000b4 <SetOsccal>:
  b4:	91 b7       	in	r25, 0x31	; 49
  b6:	98 17       	cp	r25, r24
  b8:	91 f0       	breq	.+36     	; 0xde <SetOsccal+0x2a>
  ba:	98 17       	cp	r25, r24
  bc:	10 f4       	brcc	.+4      	; 0xc2 <SetOsccal+0xe>
  be:	9f 5f       	subi	r25, 0xFF	; 255
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <SetOsccal+0x10>
  c2:	91 50       	subi	r25, 0x01	; 1
  c4:	91 bf       	out	0x31, r25	; 49
  c6:	9f ef       	ldi	r25, 0xFF	; 255
	...
  d8:	91 50       	subi	r25, 0x01	; 1
  da:	b1 f7       	brne	.-20     	; 0xc8 <SetOsccal+0x14>
  dc:	eb cf       	rjmp	.-42     	; 0xb4 <SetOsccal>
  de:	08 95       	ret

000000e0 <SwUartInit>:
  e0:	cf 93       	push	r28
  e2:	c8 2f       	mov	r28, r24
  e4:	83 ea       	ldi	r24, 0xA3	; 163
  e6:	e6 df       	rcall	.-52     	; 0xb4 <SetOsccal>
  e8:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__data_end>
  ec:	c0 9a       	sbi	0x18, 0	; 24
  ee:	b8 9a       	sbi	0x17, 0	; 23
  f0:	cf 91       	pop	r28
  f2:	08 95       	ret

000000f4 <SwUartSendByte>:
  f4:	cf 93       	push	r28
  f6:	df 93       	push	r29
  f8:	c8 2f       	mov	r28, r24
  fa:	c0 98       	cbi	0x18, 0	; 24
  fc:	c8 df       	rcall	.-112    	; 0x8e <SwUartOneBitDelay>
  fe:	d8 e0       	ldi	r29, 0x08	; 8
 100:	c0 ff       	sbrs	r28, 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <__DATA_REGION_LENGTH__+0x8>
 104:	c0 9a       	sbi	0x18, 0	; 24
 106:	01 c0       	rjmp	.+2      	; 0x10a <__DATA_REGION_LENGTH__+0xa>
 108:	c0 98       	cbi	0x18, 0	; 24
 10a:	c1 df       	rcall	.-126    	; 0x8e <SwUartOneBitDelay>
 10c:	c6 95       	lsr	r28
 10e:	d1 50       	subi	r29, 0x01	; 1
 110:	b9 f7       	brne	.-18     	; 0x100 <__DATA_REGION_LENGTH__>
 112:	c0 9a       	sbi	0x18, 0	; 24
 114:	bc df       	rcall	.-136    	; 0x8e <SwUartOneBitDelay>
 116:	bb df       	rcall	.-138    	; 0x8e <SwUartOneBitDelay>
 118:	df 91       	pop	r29
 11a:	cf 91       	pop	r28
 11c:	08 95       	ret

0000011e <SwUartPrintString>:
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	ec 01       	movw	r28, r24
 124:	89 91       	ld	r24, Y+
 126:	88 23       	and	r24, r24
 128:	11 f0       	breq	.+4      	; 0x12e <SwUartPrintString+0x10>
 12a:	e4 df       	rcall	.-56     	; 0xf4 <SwUartSendByte>
 12c:	fb cf       	rjmp	.-10     	; 0x124 <SwUartPrintString+0x6>
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <SwUartPrintByte>:
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	28 2f       	mov	r18, r24
 13a:	3a e0       	ldi	r19, 0x0A	; 10
 13c:	63 2f       	mov	r22, r19
 13e:	22 d0       	rcall	.+68     	; 0x184 <__udivmodqi4>
 140:	d9 2f       	mov	r29, r25
 142:	20 d0       	rcall	.+64     	; 0x184 <__udivmodqi4>
 144:	c9 2f       	mov	r28, r25
 146:	82 2f       	mov	r24, r18
 148:	64 e6       	ldi	r22, 0x64	; 100
 14a:	1c d0       	rcall	.+56     	; 0x184 <__udivmodqi4>
 14c:	88 23       	and	r24, r24
 14e:	11 f0       	breq	.+4      	; 0x154 <SwUartPrintByte+0x20>
 150:	80 5d       	subi	r24, 0xD0	; 208
 152:	d0 df       	rcall	.-96     	; 0xf4 <SwUartSendByte>
 154:	cc 23       	and	r28, r28
 156:	19 f0       	breq	.+6      	; 0x15e <SwUartPrintByte+0x2a>
 158:	80 e3       	ldi	r24, 0x30	; 48
 15a:	8c 0f       	add	r24, r28
 15c:	cb df       	rcall	.-106    	; 0xf4 <SwUartSendByte>
 15e:	80 e3       	ldi	r24, 0x30	; 48
 160:	8d 0f       	add	r24, r29
 162:	df 91       	pop	r29
 164:	cf 91       	pop	r28
 166:	c6 cf       	rjmp	.-116    	; 0xf4 <SwUartSendByte>

00000168 <main>:
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	ba df       	rcall	.-140    	; 0xe0 <SwUartInit>
 16c:	80 e6       	ldi	r24, 0x60	; 96
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	d6 df       	rcall	.-84     	; 0x11e <SwUartPrintString>
 172:	8b e7       	ldi	r24, 0x7B	; 123
 174:	df df       	rcall	.-66     	; 0x134 <SwUartPrintByte>
 176:	85 e8       	ldi	r24, 0x85	; 133
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	d1 df       	rcall	.-94     	; 0x11e <SwUartPrintString>
 17c:	84 ef       	ldi	r24, 0xF4	; 244
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	74 df       	rcall	.-280    	; 0x6a <DelayMiliSec>
 182:	f4 cf       	rjmp	.-24     	; 0x16c <main+0x4>

00000184 <__udivmodqi4>:
 184:	99 1b       	sub	r25, r25
 186:	79 e0       	ldi	r23, 0x09	; 9
 188:	04 c0       	rjmp	.+8      	; 0x192 <__udivmodqi4_ep>

0000018a <__udivmodqi4_loop>:
 18a:	99 1f       	adc	r25, r25
 18c:	96 17       	cp	r25, r22
 18e:	08 f0       	brcs	.+2      	; 0x192 <__udivmodqi4_ep>
 190:	96 1b       	sub	r25, r22

00000192 <__udivmodqi4_ep>:
 192:	88 1f       	adc	r24, r24
 194:	7a 95       	dec	r23
 196:	c9 f7       	brne	.-14     	; 0x18a <__udivmodqi4_loop>
 198:	80 95       	com	r24
 19a:	08 95       	ret

0000019c <_exit>:
 19c:	f8 94       	cli

0000019e <__stop_program>:
 19e:	ff cf       	rjmp	.-2      	; 0x19e <__stop_program>
