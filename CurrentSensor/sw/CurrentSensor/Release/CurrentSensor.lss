
CurrentSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000246  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000246  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY
  4 .debug_info   00000420  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000003e8  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000f2  00000000  00000000  00000abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000169  00000000  00000000  00000bae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	50 d0       	rcall	.+160    	; 0xcc <main>
  2c:	e0 c0       	rjmp	.+448    	; 0x1ee <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <InitVoltageADC>:
  30:	ba 98       	cbi	0x17, 2	; 23
  32:	c2 98       	cbi	0x18, 2	; 24
  34:	81 e0       	ldi	r24, 0x01	; 1
  36:	87 b9       	out	0x07, r24	; 7
  38:	86 e9       	ldi	r24, 0x96	; 150
  3a:	86 b9       	out	0x06, r24	; 6
  3c:	83 b1       	in	r24, 0x03	; 3
  3e:	80 74       	andi	r24, 0x40	; 64
  40:	83 b9       	out	0x03, r24	; 3
  42:	a2 9a       	sbi	0x14, 2	; 20
  44:	08 95       	ret

00000046 <StartAdcConversion>:
  46:	34 9a       	sbi	0x06, 4	; 6
  48:	36 9a       	sbi	0x06, 6	; 6
  4a:	34 9b       	sbis	0x06, 4	; 6
  4c:	fe cf       	rjmp	.-4      	; 0x4a <StartAdcConversion+0x4>
  4e:	34 9a       	sbi	0x06, 4	; 6
  50:	24 b1       	in	r18, 0x04	; 4
  52:	85 b1       	in	r24, 0x05	; 5
  54:	90 e0       	ldi	r25, 0x00	; 0
  56:	98 2f       	mov	r25, r24
  58:	88 27       	eor	r24, r24
  5a:	82 0f       	add	r24, r18
  5c:	91 1d       	adc	r25, r1
  5e:	08 95       	ret

00000060 <GetVoltageAdcValueInMv>:
  60:	cf 92       	push	r12
  62:	df 92       	push	r13
  64:	ef 92       	push	r14
  66:	ff 92       	push	r15
  68:	0f 93       	push	r16
  6a:	1f 93       	push	r17
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	ec 01       	movw	r28, r24
  72:	de df       	rcall	.-68     	; 0x30 <InitVoltageADC>
  74:	e8 df       	rcall	.-48     	; 0x46 <StartAdcConversion>
  76:	8e 01       	movw	r16, r28
  78:	c1 2c       	mov	r12, r1
  7a:	d1 2c       	mov	r13, r1
  7c:	76 01       	movw	r14, r12
  7e:	01 15       	cp	r16, r1
  80:	11 05       	cpc	r17, r1
  82:	41 f0       	breq	.+16     	; 0x94 <GetVoltageAdcValueInMv+0x34>
  84:	e0 df       	rcall	.-64     	; 0x46 <StartAdcConversion>
  86:	c8 0e       	add	r12, r24
  88:	d9 1e       	adc	r13, r25
  8a:	e1 1c       	adc	r14, r1
  8c:	f1 1c       	adc	r15, r1
  8e:	01 50       	subi	r16, 0x01	; 1
  90:	11 09       	sbc	r17, r1
  92:	f5 cf       	rjmp	.-22     	; 0x7e <GetVoltageAdcValueInMv+0x1e>
  94:	9e 01       	movw	r18, r28
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	50 e0       	ldi	r21, 0x00	; 0
  9a:	c7 01       	movw	r24, r14
  9c:	b6 01       	movw	r22, r12
  9e:	85 d0       	rcall	.+266    	; 0x1aa <__udivmodsi4>
  a0:	ca 01       	movw	r24, r20
  a2:	b9 01       	movw	r22, r18
  a4:	2c ee       	ldi	r18, 0xEC	; 236
  a6:	31 e0       	ldi	r19, 0x01	; 1
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	50 e0       	ldi	r21, 0x00	; 0
  ac:	65 d0       	rcall	.+202    	; 0x178 <__mulsi3>
  ae:	29 e1       	ldi	r18, 0x19	; 25
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	40 e0       	ldi	r20, 0x00	; 0
  b4:	50 e0       	ldi	r21, 0x00	; 0
  b6:	79 d0       	rcall	.+242    	; 0x1aa <__udivmodsi4>
  b8:	c9 01       	movw	r24, r18
  ba:	df 91       	pop	r29
  bc:	cf 91       	pop	r28
  be:	1f 91       	pop	r17
  c0:	0f 91       	pop	r16
  c2:	ff 90       	pop	r15
  c4:	ef 90       	pop	r14
  c6:	df 90       	pop	r13
  c8:	cf 90       	pop	r12
  ca:	08 95       	ret

000000cc <main>:
  cc:	84 e6       	ldi	r24, 0x64	; 100
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	c7 df       	rcall	.-114    	; 0x60 <GetVoltageAdcValueInMv>
  d2:	30 d0       	rcall	.+96     	; 0x134 <ShowDebug16bitValue>
  d4:	8a e0       	ldi	r24, 0x0A	; 10
  d6:	0e d0       	rcall	.+28     	; 0xf4 <DelayDebugMiliSeconds>
  d8:	f9 cf       	rjmp	.-14     	; 0xcc <main>

000000da <DelayDebugMicroseconds>:
  da:	88 23       	and	r24, r24
  dc:	51 f0       	breq	.+20     	; 0xf2 <DelayDebugMicroseconds+0x18>
	...
  ee:	81 50       	subi	r24, 0x01	; 1
  f0:	f4 cf       	rjmp	.-24     	; 0xda <DelayDebugMicroseconds>
  f2:	08 95       	ret

000000f4 <DelayDebugMiliSeconds>:
  f4:	cf 93       	push	r28
  f6:	c8 2f       	mov	r28, r24
  f8:	cc 23       	and	r28, r28
  fa:	61 f0       	breq	.+24     	; 0x114 <__DATA_REGION_LENGTH__+0x14>
  fc:	88 ec       	ldi	r24, 0xC8	; 200
  fe:	ed df       	rcall	.-38     	; 0xda <DelayDebugMicroseconds>
 100:	88 ec       	ldi	r24, 0xC8	; 200
 102:	eb df       	rcall	.-42     	; 0xda <DelayDebugMicroseconds>
 104:	88 ec       	ldi	r24, 0xC8	; 200
 106:	e9 df       	rcall	.-46     	; 0xda <DelayDebugMicroseconds>
 108:	88 ec       	ldi	r24, 0xC8	; 200
 10a:	e7 df       	rcall	.-50     	; 0xda <DelayDebugMicroseconds>
 10c:	88 ec       	ldi	r24, 0xC8	; 200
 10e:	e5 df       	rcall	.-54     	; 0xda <DelayDebugMicroseconds>
 110:	c1 50       	subi	r28, 0x01	; 1
 112:	f2 cf       	rjmp	.-28     	; 0xf8 <DelayDebugMiliSeconds+0x4>
 114:	cf 91       	pop	r28
 116:	08 95       	ret

00000118 <Marker>:
 118:	cf 93       	push	r28
 11a:	c8 2f       	mov	r28, r24
 11c:	cc 23       	and	r28, r28
 11e:	41 f0       	breq	.+16     	; 0x130 <Marker+0x18>
 120:	c0 9a       	sbi	0x18, 0	; 24
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	da df       	rcall	.-76     	; 0xda <DelayDebugMicroseconds>
 126:	c0 98       	cbi	0x18, 0	; 24
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	d7 df       	rcall	.-82     	; 0xda <DelayDebugMicroseconds>
 12c:	c1 50       	subi	r28, 0x01	; 1
 12e:	f6 cf       	rjmp	.-20     	; 0x11c <Marker+0x4>
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <ShowDebug16bitValue>:
 134:	0f 93       	push	r16
 136:	1f 93       	push	r17
 138:	cf 93       	push	r28
 13a:	df 93       	push	r29
 13c:	8c 01       	movw	r16, r24
 13e:	b8 9a       	sbi	0x17, 0	; 23
 140:	84 e6       	ldi	r24, 0x64	; 100
 142:	ea df       	rcall	.-44     	; 0x118 <Marker>
 144:	e8 01       	movw	r28, r16
 146:	10 e1       	ldi	r17, 0x10	; 16
 148:	d7 ff       	sbrs	r29, 7
 14a:	02 c0       	rjmp	.+4      	; 0x150 <ShowDebug16bitValue+0x1c>
 14c:	c0 9a       	sbi	0x18, 0	; 24
 14e:	01 c0       	rjmp	.+2      	; 0x152 <ShowDebug16bitValue+0x1e>
 150:	c0 98       	cbi	0x18, 0	; 24
 152:	88 ec       	ldi	r24, 0xC8	; 200
 154:	c2 df       	rcall	.-124    	; 0xda <DelayDebugMicroseconds>
 156:	83 e0       	ldi	r24, 0x03	; 3
 158:	df df       	rcall	.-66     	; 0x118 <Marker>
 15a:	cc 0f       	add	r28, r28
 15c:	dd 1f       	adc	r29, r29
 15e:	11 50       	subi	r17, 0x01	; 1
 160:	29 f0       	breq	.+10     	; 0x16c <__stack+0xd>
 162:	18 30       	cpi	r17, 0x08	; 8
 164:	89 f7       	brne	.-30     	; 0x148 <ShowDebug16bitValue+0x14>
 166:	89 e1       	ldi	r24, 0x19	; 25
 168:	d7 df       	rcall	.-82     	; 0x118 <Marker>
 16a:	ee cf       	rjmp	.-36     	; 0x148 <ShowDebug16bitValue+0x14>
 16c:	c0 98       	cbi	0x18, 0	; 24
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <__mulsi3>:
 178:	ee 27       	eor	r30, r30
 17a:	ff 27       	eor	r31, r31

0000017c <__mulsi3_helper>:
 17c:	aa 27       	eor	r26, r26
 17e:	bb 27       	eor	r27, r27
 180:	08 c0       	rjmp	.+16     	; 0x192 <__mulsi3_helper+0x16>
 182:	a2 0f       	add	r26, r18
 184:	b3 1f       	adc	r27, r19
 186:	e4 1f       	adc	r30, r20
 188:	f5 1f       	adc	r31, r21
 18a:	22 0f       	add	r18, r18
 18c:	33 1f       	adc	r19, r19
 18e:	44 1f       	adc	r20, r20
 190:	55 1f       	adc	r21, r21
 192:	96 95       	lsr	r25
 194:	87 95       	ror	r24
 196:	77 95       	ror	r23
 198:	67 95       	ror	r22
 19a:	98 f3       	brcs	.-26     	; 0x182 <__mulsi3_helper+0x6>
 19c:	70 40       	sbci	r23, 0x00	; 0
 19e:	a9 f7       	brne	.-22     	; 0x18a <__mulsi3_helper+0xe>
 1a0:	00 97       	sbiw	r24, 0x00	; 0
 1a2:	99 f7       	brne	.-26     	; 0x18a <__mulsi3_helper+0xe>
 1a4:	bd 01       	movw	r22, r26
 1a6:	cf 01       	movw	r24, r30
 1a8:	08 95       	ret

000001aa <__udivmodsi4>:
 1aa:	a1 e2       	ldi	r26, 0x21	; 33
 1ac:	1a 2e       	mov	r1, r26
 1ae:	aa 1b       	sub	r26, r26
 1b0:	bb 1b       	sub	r27, r27
 1b2:	fd 01       	movw	r30, r26
 1b4:	0d c0       	rjmp	.+26     	; 0x1d0 <__udivmodsi4_ep>

000001b6 <__udivmodsi4_loop>:
 1b6:	aa 1f       	adc	r26, r26
 1b8:	bb 1f       	adc	r27, r27
 1ba:	ee 1f       	adc	r30, r30
 1bc:	ff 1f       	adc	r31, r31
 1be:	a2 17       	cp	r26, r18
 1c0:	b3 07       	cpc	r27, r19
 1c2:	e4 07       	cpc	r30, r20
 1c4:	f5 07       	cpc	r31, r21
 1c6:	20 f0       	brcs	.+8      	; 0x1d0 <__udivmodsi4_ep>
 1c8:	a2 1b       	sub	r26, r18
 1ca:	b3 0b       	sbc	r27, r19
 1cc:	e4 0b       	sbc	r30, r20
 1ce:	f5 0b       	sbc	r31, r21

000001d0 <__udivmodsi4_ep>:
 1d0:	66 1f       	adc	r22, r22
 1d2:	77 1f       	adc	r23, r23
 1d4:	88 1f       	adc	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	1a 94       	dec	r1
 1da:	69 f7       	brne	.-38     	; 0x1b6 <__udivmodsi4_loop>
 1dc:	60 95       	com	r22
 1de:	70 95       	com	r23
 1e0:	80 95       	com	r24
 1e2:	90 95       	com	r25
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	bd 01       	movw	r22, r26
 1ea:	cf 01       	movw	r24, r30
 1ec:	08 95       	ret

000001ee <_exit>:
 1ee:	f8 94       	cli

000001f0 <__stop_program>:
 1f0:	ff cf       	rjmp	.-2      	; 0x1f0 <__stop_program>
