/*
 * IntToStr.cpp
 *
 *  Created on: Jan 22, 2025
 *      Author: Goggy
 */


#include "IntToStr.hpp"


namespace intToStr
{

// Define string conversion buffer
#define STR_SIZE 		22
static char strBuff[STR_SIZE];


// ------------ To Hex conversions ---------------
template <class T>
inline const char* UIntToHex(const T valInput, const uint8_t sizeInHalfBytes)
{
	strBuff[0] = '0';
	strBuff[1] = 'x';
	T val = valInput;
	for(uint8_t halfByteCnt = 0; halfByteCnt < sizeInHalfBytes; ++halfByteCnt)
	{
		char halfHexSymbol = (uint8_t)(val & 0x0F);
		halfHexSymbol += (halfHexSymbol > 9) ? ('A' - 10) : ('0');
		strBuff[2 + (sizeInHalfBytes - 1 - halfByteCnt)] = halfHexSymbol;
		val >>= 4;
	}
	strBuff[2 + sizeInHalfBytes] = 0x00;
	return &strBuff[0];
}


template <>
const char* ToHex(const uint8_t val)
{
	return UIntToHex(val, sizeof(val) * 2);
}


template <>
const char* ToHex(const uint16_t val)
{
	return UIntToHex(val, sizeof(val) * 2);
}

template <>
const char* ToHex(const uint32_t val)
{
	return UIntToHex(val, sizeof(val) * 2);
}

template <>
const char* ToHex(const uint64_t val)
{
	return UIntToHex(val, sizeof(val) * 2);
}

//--------------- To decimal conversions --------------------



}	// namespace intToStr


