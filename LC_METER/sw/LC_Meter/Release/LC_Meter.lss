
LC_Meter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000043c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  0000043c  000004d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080007e  0080007e  000004ee  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000520  2**2
                  CONTENTS, READONLY
  5 .debug_info   000004f8  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004b4  00000000  00000000  00000a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000019c  00000000  00000000  00001022  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	26 c0       	rjmp	.+76     	; 0x4e <__ctors_end>
   2:	40 c0       	rjmp	.+128    	; 0x84 <__bad_interrupt>
   4:	3f c0       	rjmp	.+126    	; 0x84 <__bad_interrupt>
   6:	3e c0       	rjmp	.+124    	; 0x84 <__bad_interrupt>
   8:	6d c0       	rjmp	.+218    	; 0xe4 <__vector_4>
   a:	3c c0       	rjmp	.+120    	; 0x84 <__bad_interrupt>
   c:	3b c0       	rjmp	.+118    	; 0x84 <__bad_interrupt>
   e:	3a c0       	rjmp	.+116    	; 0x84 <__bad_interrupt>
  10:	39 c0       	rjmp	.+114    	; 0x84 <__bad_interrupt>
  12:	38 c0       	rjmp	.+112    	; 0x84 <__bad_interrupt>
  14:	37 c0       	rjmp	.+110    	; 0x84 <__bad_interrupt>
  16:	36 c0       	rjmp	.+108    	; 0x84 <__bad_interrupt>
  18:	35 c0       	rjmp	.+106    	; 0x84 <__bad_interrupt>
  1a:	34 c0       	rjmp	.+104    	; 0x84 <__bad_interrupt>
  1c:	33 c0       	rjmp	.+102    	; 0x84 <__bad_interrupt>
  1e:	32 c0       	rjmp	.+100    	; 0x84 <__bad_interrupt>
  20:	31 c0       	rjmp	.+98     	; 0x84 <__bad_interrupt>
  22:	30 c0       	rjmp	.+96     	; 0x84 <__bad_interrupt>
  24:	2f c0       	rjmp	.+94     	; 0x84 <__bad_interrupt>
  26:	2e c0       	rjmp	.+92     	; 0x84 <__bad_interrupt>
  28:	2d c0       	rjmp	.+90     	; 0x84 <__bad_interrupt>

0000002a <LedLettersDefinition>:
  2a:	de f4 b8 e6 f8 d8 bc d6 06 a6 40 b0 40 c4 e4 da     ..........@.@...
  3a:	40 c0 7c f0 a4 40 40 40 76 40                       @.|..@@@v@

00000044 <LedDigitsDefinition>:
  44:	be 06 ea 6e 56 7c fc 0e fe 7e                       ...nV|...~

0000004e <__ctors_end>:
  4e:	11 24       	eor	r1, r1
  50:	1f be       	out	0x3f, r1	; 63
  52:	cf e5       	ldi	r28, 0x5F	; 95
  54:	d2 e0       	ldi	r29, 0x02	; 2
  56:	de bf       	out	0x3e, r29	; 62
  58:	cd bf       	out	0x3d, r28	; 61

0000005a <__do_copy_data>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	a0 e6       	ldi	r26, 0x60	; 96
  5e:	b0 e0       	ldi	r27, 0x00	; 0
  60:	ec e3       	ldi	r30, 0x3C	; 60
  62:	f4 e0       	ldi	r31, 0x04	; 4
  64:	02 c0       	rjmp	.+4      	; 0x6a <__do_copy_data+0x10>
  66:	05 90       	lpm	r0, Z+
  68:	0d 92       	st	X+, r0
  6a:	ae 37       	cpi	r26, 0x7E	; 126
  6c:	b1 07       	cpc	r27, r17
  6e:	d9 f7       	brne	.-10     	; 0x66 <__do_copy_data+0xc>

00000070 <__do_clear_bss>:
  70:	20 e0       	ldi	r18, 0x00	; 0
  72:	ae e7       	ldi	r26, 0x7E	; 126
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	01 c0       	rjmp	.+2      	; 0x7a <.do_clear_bss_start>

00000078 <.do_clear_bss_loop>:
  78:	1d 92       	st	X+, r1

0000007a <.do_clear_bss_start>:
  7a:	a3 38       	cpi	r26, 0x83	; 131
  7c:	b2 07       	cpc	r27, r18
  7e:	e1 f7       	brne	.-8      	; 0x78 <.do_clear_bss_loop>
  80:	65 d1       	rcall	.+714    	; 0x34c <main>
  82:	da c1       	rjmp	.+948    	; 0x438 <_exit>

00000084 <__bad_interrupt>:
  84:	bd cf       	rjmp	.-134    	; 0x0 <__vectors>

00000086 <AdcTurnOn>:
  86:	8f 71       	andi	r24, 0x1F	; 31
  88:	80 64       	ori	r24, 0x40	; 64
  8a:	87 b9       	out	0x07, r24	; 7
  8c:	87 e8       	ldi	r24, 0x87	; 135
  8e:	86 b9       	out	0x06, r24	; 6
  90:	08 95       	ret

00000092 <AdcSelectInput>:
  92:	97 b1       	in	r25, 0x07	; 7
  94:	90 7e       	andi	r25, 0xE0	; 224
  96:	8f 71       	andi	r24, 0x1F	; 31
  98:	89 2b       	or	r24, r25
  9a:	87 b9       	out	0x07, r24	; 7
  9c:	08 95       	ret

0000009e <AdcRead>:
  9e:	34 99       	sbic	0x06, 4	; 6
  a0:	34 9a       	sbi	0x06, 4	; 6
  a2:	36 9a       	sbi	0x06, 6	; 6
  a4:	34 9b       	sbis	0x06, 4	; 6
  a6:	fe cf       	rjmp	.-4      	; 0xa4 <AdcRead+0x6>
  a8:	24 b1       	in	r18, 0x04	; 4
  aa:	85 b1       	in	r24, 0x05	; 5
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	98 2f       	mov	r25, r24
  b0:	88 27       	eor	r24, r24
  b2:	34 9a       	sbi	0x06, 4	; 6
  b4:	82 0f       	add	r24, r18
  b6:	91 1d       	adc	r25, r1
  b8:	08 95       	ret

000000ba <AdcReadMultipleTimes>:
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	08 2f       	mov	r16, r24
  c4:	10 e0       	ldi	r17, 0x00	; 0
  c6:	c0 e0       	ldi	r28, 0x00	; 0
  c8:	d0 e0       	ldi	r29, 0x00	; 0
  ca:	10 17       	cp	r17, r16
  cc:	29 f0       	breq	.+10     	; 0xd8 <AdcReadMultipleTimes+0x1e>
  ce:	e7 df       	rcall	.-50     	; 0x9e <AdcRead>
  d0:	c8 0f       	add	r28, r24
  d2:	d9 1f       	adc	r29, r25
  d4:	1f 5f       	subi	r17, 0xFF	; 255
  d6:	f9 cf       	rjmp	.-14     	; 0xca <AdcReadMultipleTimes+0x10>
  d8:	ce 01       	movw	r24, r28
  da:	df 91       	pop	r29
  dc:	cf 91       	pop	r28
  de:	1f 91       	pop	r17
  e0:	0f 91       	pop	r16
  e2:	08 95       	ret

000000e4 <__vector_4>:
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	8f 93       	push	r24
  f0:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <Key1Timer>
  f4:	8a 30       	cpi	r24, 0x0A	; 10
  f6:	28 f4       	brcc	.+10     	; 0x102 <__vector_4+0x1e>
  f8:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <Key1Timer>
  fc:	8f 5f       	subi	r24, 0xFF	; 255
  fe:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <Key1Timer>
 102:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 106:	8a 30       	cpi	r24, 0x0A	; 10
 108:	28 f4       	brcc	.+10     	; 0x114 <__vector_4+0x30>
 10a:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <__data_end>
 10e:	8f 5f       	subi	r24, 0xFF	; 255
 110:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end>
 114:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <Key3Timer>
 118:	8a 30       	cpi	r24, 0x0A	; 10
 11a:	28 f4       	brcc	.+10     	; 0x126 <__vector_4+0x42>
 11c:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <Key3Timer>
 120:	8f 5f       	subi	r24, 0xFF	; 255
 122:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <Key3Timer>
 126:	8f 91       	pop	r24
 128:	0f 90       	pop	r0
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	0f 90       	pop	r0
 12e:	1f 90       	pop	r1
 130:	18 95       	reti

00000132 <KeysReaderInit>:
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <Key1Timer>
 138:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__data_end>
 13c:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <Key3Timer>
 140:	87 e0       	ldi	r24, 0x07	; 7
 142:	85 bd       	out	0x25, r24	; 37
 144:	89 b7       	in	r24, 0x39	; 57
 146:	8f 77       	andi	r24, 0x7F	; 127
 148:	89 bf       	out	0x39, r24	; 57
 14a:	89 b7       	in	r24, 0x39	; 57
 14c:	80 64       	ori	r24, 0x40	; 64
 14e:	89 bf       	out	0x39, r24	; 57
 150:	84 b3       	in	r24, 0x14	; 20
 152:	8f 78       	andi	r24, 0x8F	; 143
 154:	84 bb       	out	0x14, r24	; 20
 156:	08 95       	ret

00000158 <IsKeyPressed>:
 158:	fc 01       	movw	r30, r24
 15a:	0f 93       	push	r16
 15c:	0f b7       	in	r16, 0x3f	; 63
 15e:	0f 93       	push	r16
 160:	f8 94       	cli
 162:	83 b3       	in	r24, 0x13	; 19
 164:	68 23       	and	r22, r24
 166:	80 81       	ld	r24, Z
 168:	61 11       	cpse	r22, r1
 16a:	05 c0       	rjmp	.+10     	; 0x176 <IsKeyPressed+0x1e>
 16c:	8f 3f       	cpi	r24, 0xFF	; 255
 16e:	39 f4       	brne	.+14     	; 0x17e <IsKeyPressed+0x26>
 170:	10 82       	st	Z, r1
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	05 c0       	rjmp	.+10     	; 0x180 <IsKeyPressed+0x28>
 176:	8a 30       	cpi	r24, 0x0A	; 10
 178:	11 f4       	brne	.+4      	; 0x17e <IsKeyPressed+0x26>
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	80 83       	st	Z, r24
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	0f 91       	pop	r16
 182:	0f bf       	out	0x3f, r16	; 63
 184:	0f 91       	pop	r16
 186:	08 95       	ret

00000188 <IsKeyModePressed>:
 188:	60 e1       	ldi	r22, 0x10	; 16
 18a:	80 e8       	ldi	r24, 0x80	; 128
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	e4 cf       	rjmp	.-56     	; 0x158 <IsKeyPressed>

00000190 <GetLedLetter>:
 190:	90 ed       	ldi	r25, 0xD0	; 208
 192:	98 0f       	add	r25, r24
 194:	9a 30       	cpi	r25, 0x0A	; 10
 196:	28 f4       	brcc	.+10     	; 0x1a2 <GetLedLetter+0x12>
 198:	e8 2f       	mov	r30, r24
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	ec 5e       	subi	r30, 0xEC	; 236
 19e:	ff 4f       	sbci	r31, 0xFF	; 255
 1a0:	08 c0       	rjmp	.+16     	; 0x1b2 <GetLedLetter+0x22>
 1a2:	9f eb       	ldi	r25, 0xBF	; 191
 1a4:	98 0f       	add	r25, r24
 1a6:	9a 31       	cpi	r25, 0x1A	; 26
 1a8:	30 f4       	brcc	.+12     	; 0x1b6 <GetLedLetter+0x26>
 1aa:	e8 2f       	mov	r30, r24
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	e7 51       	subi	r30, 0x17	; 23
 1b0:	f0 40       	sbci	r31, 0x00	; 0
 1b2:	84 91       	lpm	r24, Z
 1b4:	08 95       	ret
 1b6:	9f e9       	ldi	r25, 0x9F	; 159
 1b8:	98 0f       	add	r25, r24
 1ba:	9a 31       	cpi	r25, 0x1A	; 26
 1bc:	28 f4       	brcc	.+10     	; 0x1c8 <GetLedLetter+0x38>
 1be:	e8 2f       	mov	r30, r24
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	e7 53       	subi	r30, 0x37	; 55
 1c4:	f0 40       	sbci	r31, 0x00	; 0
 1c6:	f5 cf       	rjmp	.-22     	; 0x1b2 <GetLedLetter+0x22>
 1c8:	8f 35       	cpi	r24, 0x5F	; 95
 1ca:	21 f0       	breq	.+8      	; 0x1d4 <GetLedLetter+0x44>
 1cc:	8d 32       	cpi	r24, 0x2D	; 45
 1ce:	21 f0       	breq	.+8      	; 0x1d8 <GetLedLetter+0x48>
 1d0:	80 e0       	ldi	r24, 0x00	; 0
 1d2:	08 95       	ret
 1d4:	80 e2       	ldi	r24, 0x20	; 32
 1d6:	08 95       	ret
 1d8:	80 e4       	ldi	r24, 0x40	; 64
 1da:	08 95       	ret

000001dc <InitLedsScreen>:
 1dc:	85 b3       	in	r24, 0x15	; 21
 1de:	81 7f       	andi	r24, 0xF1	; 241
 1e0:	85 bb       	out	0x15, r24	; 21
 1e2:	84 b3       	in	r24, 0x14	; 20
 1e4:	8e 60       	ori	r24, 0x0E	; 14
 1e6:	84 bb       	out	0x14, r24	; 20
 1e8:	08 95       	ret

000001ea <LedWriteWithDot>:
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
 1ee:	cf 93       	push	r28
 1f0:	df 93       	push	r29
 1f2:	d6 2f       	mov	r29, r22
 1f4:	8c 01       	movw	r16, r24
 1f6:	0b 5f       	subi	r16, 0xFB	; 251
 1f8:	1f 4f       	sbci	r17, 0xFF	; 255
 1fa:	c0 e0       	ldi	r28, 0x00	; 0
 1fc:	f8 01       	movw	r30, r16
 1fe:	82 91       	ld	r24, -Z
 200:	8f 01       	movw	r16, r30
 202:	c6 df       	rcall	.-116    	; 0x190 <GetLedLetter>
 204:	dc 13       	cpse	r29, r28
 206:	01 c0       	rjmp	.+2      	; 0x20a <__DATA_REGION_LENGTH__+0xa>
 208:	81 60       	ori	r24, 0x01	; 1
 20a:	ab 98       	cbi	0x15, 3	; 21
 20c:	98 e0       	ldi	r25, 0x08	; 8
 20e:	80 ff       	sbrs	r24, 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <__DATA_REGION_LENGTH__+0x16>
 212:	a9 9a       	sbi	0x15, 1	; 21
 214:	01 c0       	rjmp	.+2      	; 0x218 <__DATA_REGION_LENGTH__+0x18>
 216:	a9 98       	cbi	0x15, 1	; 21
 218:	ab 9a       	sbi	0x15, 3	; 21
 21a:	ab 98       	cbi	0x15, 3	; 21
 21c:	86 95       	lsr	r24
 21e:	91 50       	subi	r25, 0x01	; 1
 220:	b1 f7       	brne	.-20     	; 0x20e <__DATA_REGION_LENGTH__+0xe>
 222:	cf 5f       	subi	r28, 0xFF	; 255
 224:	c5 30       	cpi	r28, 0x05	; 5
 226:	51 f7       	brne	.-44     	; 0x1fc <LedWriteWithDot+0x12>
 228:	aa 9a       	sbi	0x15, 2	; 21
 22a:	aa 98       	cbi	0x15, 2	; 21
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	1f 91       	pop	r17
 232:	0f 91       	pop	r16
 234:	08 95       	ret

00000236 <LedWrite>:
 236:	6f ef       	ldi	r22, 0xFF	; 255
 238:	d8 cf       	rjmp	.-80     	; 0x1ea <LedWriteWithDot>

0000023a <CopyString>:
 23a:	9b 01       	movw	r18, r22
 23c:	2b 5f       	subi	r18, 0xFB	; 251
 23e:	3f 4f       	sbci	r19, 0xFF	; 255
 240:	fb 01       	movw	r30, r22
 242:	41 91       	ld	r20, Z+
 244:	bf 01       	movw	r22, r30
 246:	fc 01       	movw	r30, r24
 248:	41 93       	st	Z+, r20
 24a:	cf 01       	movw	r24, r30
 24c:	62 17       	cp	r22, r18
 24e:	73 07       	cpc	r23, r19
 250:	b9 f7       	brne	.-18     	; 0x240 <CopyString+0x6>
 252:	08 95       	ret

00000254 <IntToString>:
 254:	0f 93       	push	r16
 256:	1f 93       	push	r17
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	fb 01       	movw	r30, r22
 25e:	34 96       	adiw	r30, 0x04	; 4
 260:	ec 01       	movw	r28, r24
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	0a e0       	ldi	r16, 0x0A	; 10
 266:	10 e0       	ldi	r17, 0x00	; 0
 268:	24 17       	cp	r18, r20
 26a:	30 f4       	brcc	.+12     	; 0x278 <__stack+0x19>
 26c:	ce 01       	movw	r24, r28
 26e:	b8 01       	movw	r22, r16
 270:	a1 d0       	rcall	.+322    	; 0x3b4 <__udivmodhi4>
 272:	80 5d       	subi	r24, 0xD0	; 208
 274:	80 83       	st	Z, r24
 276:	31 97       	sbiw	r30, 0x01	; 1
 278:	ce 01       	movw	r24, r28
 27a:	b8 01       	movw	r22, r16
 27c:	9b d0       	rcall	.+310    	; 0x3b4 <__udivmodhi4>
 27e:	eb 01       	movw	r28, r22
 280:	2f 5f       	subi	r18, 0xFF	; 255
 282:	25 30       	cpi	r18, 0x05	; 5
 284:	89 f7       	brne	.-30     	; 0x268 <__stack+0x9>
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	08 95       	ret

00000290 <ApplyAdcHisteresys>:
 290:	68 17       	cp	r22, r24
 292:	79 07       	cpc	r23, r25
 294:	20 f4       	brcc	.+8      	; 0x29e <ApplyAdcHisteresys+0xe>
 296:	9c 01       	movw	r18, r24
 298:	26 1b       	sub	r18, r22
 29a:	37 0b       	sbc	r19, r23
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <ApplyAdcHisteresys+0x14>
 29e:	9b 01       	movw	r18, r22
 2a0:	28 1b       	sub	r18, r24
 2a2:	39 0b       	sbc	r19, r25
 2a4:	42 17       	cp	r20, r18
 2a6:	53 07       	cpc	r21, r19
 2a8:	08 f4       	brcc	.+2      	; 0x2ac <ApplyAdcHisteresys+0x1c>
 2aa:	cb 01       	movw	r24, r22
 2ac:	08 95       	ret

000002ae <BatteryShow>:
 2ae:	0f 93       	push	r16
 2b0:	1f 93       	push	r17
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	c8 2f       	mov	r28, r24
 2b8:	88 23       	and	r24, r24
 2ba:	19 f0       	breq	.+6      	; 0x2c2 <BatteryShow+0x14>
 2bc:	82 e0       	ldi	r24, 0x02	; 2
 2be:	e9 de       	rcall	.-558    	; 0x92 <AdcSelectInput>
 2c0:	6c d0       	rcall	.+216    	; 0x39a <DisableAllPwm>
 2c2:	80 e4       	ldi	r24, 0x40	; 64
 2c4:	fa de       	rcall	.-524    	; 0xba <AdcReadMultipleTimes>
 2c6:	cc 23       	and	r28, r28
 2c8:	21 f0       	breq	.+8      	; 0x2d2 <BatteryShow+0x24>
 2ca:	90 93 82 00 	sts	0x0082, r25	; 0x800082 <adcPrevValue+0x1>
 2ce:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <adcPrevValue>
 2d2:	40 e4       	ldi	r20, 0x40	; 64
 2d4:	50 e0       	ldi	r21, 0x00	; 0
 2d6:	bc 01       	movw	r22, r24
 2d8:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <adcPrevValue>
 2dc:	90 91 82 00 	lds	r25, 0x0082	; 0x800082 <adcPrevValue+0x1>
 2e0:	d7 df       	rcall	.-82     	; 0x290 <ApplyAdcHisteresys>
 2e2:	8c 01       	movw	r16, r24
 2e4:	9c 01       	movw	r18, r24
 2e6:	ac ee       	ldi	r26, 0xEC	; 236
 2e8:	b1 e0       	ldi	r27, 0x01	; 1
 2ea:	9a d0       	rcall	.+308    	; 0x420 <__umulhisi3>
 2ec:	20 e4       	ldi	r18, 0x40	; 64
 2ee:	38 e3       	ldi	r19, 0x38	; 56
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	50 e0       	ldi	r21, 0x00	; 0
 2f4:	73 d0       	rcall	.+230    	; 0x3dc <__udivmodsi4>
 2f6:	e9 01       	movw	r28, r18
 2f8:	65 e6       	ldi	r22, 0x65	; 101
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	80 e6       	ldi	r24, 0x60	; 96
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	9c df       	rcall	.-200    	; 0x23a <CopyString>
 302:	c8 3e       	cpi	r28, 0xE8	; 232
 304:	83 e0       	ldi	r24, 0x03	; 3
 306:	d8 07       	cpc	r29, r24
 308:	58 f4       	brcc	.+22     	; 0x320 <BatteryShow+0x72>
 30a:	ce 01       	movw	r24, r28
 30c:	6a e0       	ldi	r22, 0x0A	; 10
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	51 d0       	rcall	.+162    	; 0x3b4 <__udivmodhi4>
 312:	cb 01       	movw	r24, r22
 314:	42 e0       	ldi	r20, 0x02	; 2
 316:	60 e6       	ldi	r22, 0x60	; 96
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	9c df       	rcall	.-200    	; 0x254 <IntToString>
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	0a c0       	rjmp	.+20     	; 0x334 <BatteryShow+0x86>
 320:	ce 01       	movw	r24, r28
 322:	64 e6       	ldi	r22, 0x64	; 100
 324:	70 e0       	ldi	r23, 0x00	; 0
 326:	46 d0       	rcall	.+140    	; 0x3b4 <__udivmodhi4>
 328:	cb 01       	movw	r24, r22
 32a:	42 e0       	ldi	r20, 0x02	; 2
 32c:	60 e6       	ldi	r22, 0x60	; 96
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	91 df       	rcall	.-222    	; 0x254 <IntToString>
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	80 e6       	ldi	r24, 0x60	; 96
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	58 df       	rcall	.-336    	; 0x1ea <LedWriteWithDot>
 33a:	10 93 82 00 	sts	0x0082, r17	; 0x800082 <adcPrevValue+0x1>
 33e:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <adcPrevValue>
 342:	df 91       	pop	r29
 344:	cf 91       	pop	r28
 346:	1f 91       	pop	r17
 348:	0f 91       	pop	r16
 34a:	08 95       	ret

0000034c <main>:
 34c:	47 df       	rcall	.-370    	; 0x1dc <InitLedsScreen>
 34e:	24 d0       	rcall	.+72     	; 0x398 <InitPwm>
 350:	82 e0       	ldi	r24, 0x02	; 2
 352:	99 de       	rcall	.-718    	; 0x86 <AdcTurnOn>
 354:	ee de       	rcall	.-548    	; 0x132 <KeysReaderInit>
 356:	78 94       	sei
 358:	80 e6       	ldi	r24, 0x60	; 96
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	6c df       	rcall	.-296    	; 0x236 <LedWrite>
 35e:	c0 e0       	ldi	r28, 0x00	; 0
 360:	13 df       	rcall	.-474    	; 0x188 <IsKeyModePressed>
 362:	88 23       	and	r24, r24
 364:	29 f0       	breq	.+10     	; 0x370 <main+0x24>
 366:	cf 5f       	subi	r28, 0xFF	; 255
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	c3 30       	cpi	r28, 0x03	; 3
 36c:	50 f4       	brcc	.+20     	; 0x382 <main+0x36>
 36e:	01 c0       	rjmp	.+2      	; 0x372 <main+0x26>
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	c1 30       	cpi	r28, 0x01	; 1
 374:	41 f0       	breq	.+16     	; 0x386 <main+0x3a>
 376:	28 f0       	brcs	.+10     	; 0x382 <main+0x36>
 378:	c2 30       	cpi	r28, 0x02	; 2
 37a:	41 f4       	brne	.+16     	; 0x38c <main+0x40>
 37c:	61 e7       	ldi	r22, 0x71	; 113
 37e:	70 e0       	ldi	r23, 0x00	; 0
 380:	07 c0       	rjmp	.+14     	; 0x390 <main+0x44>
 382:	95 df       	rcall	.-214    	; 0x2ae <BatteryShow>
 384:	ec cf       	rjmp	.-40     	; 0x35e <main+0x12>
 386:	6b e6       	ldi	r22, 0x6B	; 107
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <main+0x44>
 38c:	67 e7       	ldi	r22, 0x77	; 119
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	80 e6       	ldi	r24, 0x60	; 96
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	52 df       	rcall	.-348    	; 0x23a <CopyString>
 396:	e4 cf       	rjmp	.-56     	; 0x360 <main+0x14>

00000398 <InitPwm>:
 398:	08 95       	ret

0000039a <DisableAllPwm>:
 39a:	82 b3       	in	r24, 0x12	; 18
 39c:	8f 7c       	andi	r24, 0xCF	; 207
 39e:	82 bb       	out	0x12, r24	; 18
 3a0:	81 b3       	in	r24, 0x11	; 17
 3a2:	8f 7c       	andi	r24, 0xCF	; 207
 3a4:	81 bb       	out	0x11, r24	; 17
 3a6:	8f b5       	in	r24, 0x2f	; 47
 3a8:	8f 70       	andi	r24, 0x0F	; 15
 3aa:	8f bd       	out	0x2f, r24	; 47
 3ac:	8e b5       	in	r24, 0x2e	; 46
 3ae:	88 7f       	andi	r24, 0xF8	; 248
 3b0:	8e bd       	out	0x2e, r24	; 46
 3b2:	08 95       	ret

000003b4 <__udivmodhi4>:
 3b4:	aa 1b       	sub	r26, r26
 3b6:	bb 1b       	sub	r27, r27
 3b8:	51 e1       	ldi	r21, 0x11	; 17
 3ba:	07 c0       	rjmp	.+14     	; 0x3ca <__udivmodhi4_ep>

000003bc <__udivmodhi4_loop>:
 3bc:	aa 1f       	adc	r26, r26
 3be:	bb 1f       	adc	r27, r27
 3c0:	a6 17       	cp	r26, r22
 3c2:	b7 07       	cpc	r27, r23
 3c4:	10 f0       	brcs	.+4      	; 0x3ca <__udivmodhi4_ep>
 3c6:	a6 1b       	sub	r26, r22
 3c8:	b7 0b       	sbc	r27, r23

000003ca <__udivmodhi4_ep>:
 3ca:	88 1f       	adc	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	5a 95       	dec	r21
 3d0:	a9 f7       	brne	.-22     	; 0x3bc <__udivmodhi4_loop>
 3d2:	80 95       	com	r24
 3d4:	90 95       	com	r25
 3d6:	bc 01       	movw	r22, r24
 3d8:	cd 01       	movw	r24, r26
 3da:	08 95       	ret

000003dc <__udivmodsi4>:
 3dc:	a1 e2       	ldi	r26, 0x21	; 33
 3de:	1a 2e       	mov	r1, r26
 3e0:	aa 1b       	sub	r26, r26
 3e2:	bb 1b       	sub	r27, r27
 3e4:	fd 01       	movw	r30, r26
 3e6:	0d c0       	rjmp	.+26     	; 0x402 <__udivmodsi4_ep>

000003e8 <__udivmodsi4_loop>:
 3e8:	aa 1f       	adc	r26, r26
 3ea:	bb 1f       	adc	r27, r27
 3ec:	ee 1f       	adc	r30, r30
 3ee:	ff 1f       	adc	r31, r31
 3f0:	a2 17       	cp	r26, r18
 3f2:	b3 07       	cpc	r27, r19
 3f4:	e4 07       	cpc	r30, r20
 3f6:	f5 07       	cpc	r31, r21
 3f8:	20 f0       	brcs	.+8      	; 0x402 <__udivmodsi4_ep>
 3fa:	a2 1b       	sub	r26, r18
 3fc:	b3 0b       	sbc	r27, r19
 3fe:	e4 0b       	sbc	r30, r20
 400:	f5 0b       	sbc	r31, r21

00000402 <__udivmodsi4_ep>:
 402:	66 1f       	adc	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	88 1f       	adc	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	1a 94       	dec	r1
 40c:	69 f7       	brne	.-38     	; 0x3e8 <__udivmodsi4_loop>
 40e:	60 95       	com	r22
 410:	70 95       	com	r23
 412:	80 95       	com	r24
 414:	90 95       	com	r25
 416:	9b 01       	movw	r18, r22
 418:	ac 01       	movw	r20, r24
 41a:	bd 01       	movw	r22, r26
 41c:	cf 01       	movw	r24, r30
 41e:	08 95       	ret

00000420 <__umulhisi3>:
 420:	a2 9f       	mul	r26, r18
 422:	b0 01       	movw	r22, r0
 424:	b3 9f       	mul	r27, r19
 426:	c0 01       	movw	r24, r0
 428:	a3 9f       	mul	r26, r19
 42a:	01 d0       	rcall	.+2      	; 0x42e <__umulhisi3+0xe>
 42c:	b2 9f       	mul	r27, r18
 42e:	70 0d       	add	r23, r0
 430:	81 1d       	adc	r24, r1
 432:	11 24       	eor	r1, r1
 434:	91 1d       	adc	r25, r1
 436:	08 95       	ret

00000438 <_exit>:
 438:	f8 94       	cli

0000043a <__stop_program>:
 43a:	ff cf       	rjmp	.-2      	; 0x43a <__stop_program>
