
LC_Meter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  000002de  00000372  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  0080006c  0080006c  0000037e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000037e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003b0  2**2
                  CONTENTS, READONLY
  5 .debug_info   000004f8  00000000  00000000  000003f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004b4  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  00000d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000019c  00000000  00000000  00000eb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	26 c0       	rjmp	.+76     	; 0x4e <__ctors_end>
   2:	40 c0       	rjmp	.+128    	; 0x84 <__bad_interrupt>
   4:	3f c0       	rjmp	.+126    	; 0x84 <__bad_interrupt>
   6:	3e c0       	rjmp	.+124    	; 0x84 <__bad_interrupt>
   8:	44 c0       	rjmp	.+136    	; 0x92 <__vector_4>
   a:	3c c0       	rjmp	.+120    	; 0x84 <__bad_interrupt>
   c:	3b c0       	rjmp	.+118    	; 0x84 <__bad_interrupt>
   e:	3a c0       	rjmp	.+116    	; 0x84 <__bad_interrupt>
  10:	39 c0       	rjmp	.+114    	; 0x84 <__bad_interrupt>
  12:	38 c0       	rjmp	.+112    	; 0x84 <__bad_interrupt>
  14:	37 c0       	rjmp	.+110    	; 0x84 <__bad_interrupt>
  16:	36 c0       	rjmp	.+108    	; 0x84 <__bad_interrupt>
  18:	35 c0       	rjmp	.+106    	; 0x84 <__bad_interrupt>
  1a:	34 c0       	rjmp	.+104    	; 0x84 <__bad_interrupt>
  1c:	33 c0       	rjmp	.+102    	; 0x84 <__bad_interrupt>
  1e:	32 c0       	rjmp	.+100    	; 0x84 <__bad_interrupt>
  20:	31 c0       	rjmp	.+98     	; 0x84 <__bad_interrupt>
  22:	30 c0       	rjmp	.+96     	; 0x84 <__bad_interrupt>
  24:	2f c0       	rjmp	.+94     	; 0x84 <__bad_interrupt>
  26:	2e c0       	rjmp	.+92     	; 0x84 <__bad_interrupt>
  28:	2d c0       	rjmp	.+90     	; 0x84 <__bad_interrupt>

0000002a <LedLettersDefinition>:
  2a:	de f4 b8 e6 f8 d8 bc d6 06 a6 40 b0 40 c4 e4 da     ..........@.@...
  3a:	40 c0 7c f0 a4 40 40 40 76 40                       @.|..@@@v@

00000044 <LedDigitsDefinition>:
  44:	be 06 ea 6e 56 7c fc 0e fe 7e                       ...nV|...~

0000004e <__ctors_end>:
  4e:	11 24       	eor	r1, r1
  50:	1f be       	out	0x3f, r1	; 63
  52:	cf e5       	ldi	r28, 0x5F	; 95
  54:	d2 e0       	ldi	r29, 0x02	; 2
  56:	de bf       	out	0x3e, r29	; 62
  58:	cd bf       	out	0x3d, r28	; 61

0000005a <__do_copy_data>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	a0 e6       	ldi	r26, 0x60	; 96
  5e:	b0 e0       	ldi	r27, 0x00	; 0
  60:	ee ed       	ldi	r30, 0xDE	; 222
  62:	f2 e0       	ldi	r31, 0x02	; 2
  64:	02 c0       	rjmp	.+4      	; 0x6a <__do_copy_data+0x10>
  66:	05 90       	lpm	r0, Z+
  68:	0d 92       	st	X+, r0
  6a:	ac 36       	cpi	r26, 0x6C	; 108
  6c:	b1 07       	cpc	r27, r17
  6e:	d9 f7       	brne	.-10     	; 0x66 <__do_copy_data+0xc>

00000070 <__do_clear_bss>:
  70:	20 e0       	ldi	r18, 0x00	; 0
  72:	ac e6       	ldi	r26, 0x6C	; 108
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	01 c0       	rjmp	.+2      	; 0x7a <.do_clear_bss_start>

00000078 <.do_clear_bss_loop>:
  78:	1d 92       	st	X+, r1

0000007a <.do_clear_bss_start>:
  7a:	af 36       	cpi	r26, 0x6F	; 111
  7c:	b2 07       	cpc	r27, r18
  7e:	e1 f7       	brne	.-8      	; 0x78 <.do_clear_bss_loop>
  80:	e0 d0       	rcall	.+448    	; 0x242 <main>
  82:	2b c1       	rjmp	.+598    	; 0x2da <_exit>

00000084 <__bad_interrupt>:
  84:	bd cf       	rjmp	.-134    	; 0x0 <__vectors>

00000086 <AdcTurnOn>:
  86:	8f 71       	andi	r24, 0x1F	; 31
  88:	80 64       	ori	r24, 0x40	; 64
  8a:	87 b9       	out	0x07, r24	; 7
  8c:	87 e8       	ldi	r24, 0x87	; 135
  8e:	86 b9       	out	0x06, r24	; 6
  90:	08 95       	ret

00000092 <__vector_4>:
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
  9e:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <Key1Timer>
  a2:	8a 30       	cpi	r24, 0x0A	; 10
  a4:	28 f4       	brcc	.+10     	; 0xb0 <__vector_4+0x1e>
  a6:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <Key1Timer>
  aa:	8f 5f       	subi	r24, 0xFF	; 255
  ac:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <Key1Timer>
  b0:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end>
  b4:	8a 30       	cpi	r24, 0x0A	; 10
  b6:	28 f4       	brcc	.+10     	; 0xc2 <__vector_4+0x30>
  b8:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__data_end>
  bc:	8f 5f       	subi	r24, 0xFF	; 255
  be:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
  c2:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Key3Timer>
  c6:	8a 30       	cpi	r24, 0x0A	; 10
  c8:	28 f4       	brcc	.+10     	; 0xd4 <__vector_4+0x42>
  ca:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <Key3Timer>
  ce:	8f 5f       	subi	r24, 0xFF	; 255
  d0:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <Key3Timer>
  d4:	8f 91       	pop	r24
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <KeysReaderInit>:
  e0:	8f ef       	ldi	r24, 0xFF	; 255
  e2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <Key1Timer>
  e6:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__data_end>
  ea:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <Key3Timer>
  ee:	87 e0       	ldi	r24, 0x07	; 7
  f0:	85 bd       	out	0x25, r24	; 37
  f2:	89 b7       	in	r24, 0x39	; 57
  f4:	8f 77       	andi	r24, 0x7F	; 127
  f6:	89 bf       	out	0x39, r24	; 57
  f8:	89 b7       	in	r24, 0x39	; 57
  fa:	80 64       	ori	r24, 0x40	; 64
  fc:	89 bf       	out	0x39, r24	; 57
  fe:	84 b3       	in	r24, 0x14	; 20
 100:	8f 78       	andi	r24, 0x8F	; 143
 102:	84 bb       	out	0x14, r24	; 20
 104:	08 95       	ret

00000106 <IsKeyPressed>:
 106:	fc 01       	movw	r30, r24
 108:	0f 93       	push	r16
 10a:	0f b7       	in	r16, 0x3f	; 63
 10c:	0f 93       	push	r16
 10e:	f8 94       	cli
 110:	83 b3       	in	r24, 0x13	; 19
 112:	68 23       	and	r22, r24
 114:	80 81       	ld	r24, Z
 116:	61 11       	cpse	r22, r1
 118:	05 c0       	rjmp	.+10     	; 0x124 <IsKeyPressed+0x1e>
 11a:	8f 3f       	cpi	r24, 0xFF	; 255
 11c:	39 f4       	brne	.+14     	; 0x12c <IsKeyPressed+0x26>
 11e:	10 82       	st	Z, r1
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	05 c0       	rjmp	.+10     	; 0x12e <IsKeyPressed+0x28>
 124:	8a 30       	cpi	r24, 0x0A	; 10
 126:	11 f4       	brne	.+4      	; 0x12c <IsKeyPressed+0x26>
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	80 83       	st	Z, r24
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	0f 91       	pop	r16
 130:	0f bf       	out	0x3f, r16	; 63
 132:	0f 91       	pop	r16
 134:	08 95       	ret

00000136 <IsKeyModePressed>:
 136:	60 e1       	ldi	r22, 0x10	; 16
 138:	8e e6       	ldi	r24, 0x6E	; 110
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	e4 cf       	rjmp	.-56     	; 0x106 <IsKeyPressed>

0000013e <IsKeyRangePressed>:
 13e:	60 e2       	ldi	r22, 0x20	; 32
 140:	8c e6       	ldi	r24, 0x6C	; 108
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	e0 cf       	rjmp	.-64     	; 0x106 <IsKeyPressed>

00000146 <IsKeyReservedPressed>:
 146:	60 e4       	ldi	r22, 0x40	; 64
 148:	8d e6       	ldi	r24, 0x6D	; 109
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	dc cf       	rjmp	.-72     	; 0x106 <IsKeyPressed>

0000014e <GetLedLetter>:
 14e:	9f eb       	ldi	r25, 0xBF	; 191
 150:	98 0f       	add	r25, r24
 152:	9a 31       	cpi	r25, 0x1A	; 26
 154:	28 f4       	brcc	.+10     	; 0x160 <GetLedLetter+0x12>
 156:	e8 2f       	mov	r30, r24
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	e7 51       	subi	r30, 0x17	; 23
 15c:	f0 40       	sbci	r31, 0x00	; 0
 15e:	11 c0       	rjmp	.+34     	; 0x182 <GetLedLetter+0x34>
 160:	9f e9       	ldi	r25, 0x9F	; 159
 162:	98 0f       	add	r25, r24
 164:	9a 31       	cpi	r25, 0x1A	; 26
 166:	28 f4       	brcc	.+10     	; 0x172 <GetLedLetter+0x24>
 168:	e8 2f       	mov	r30, r24
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	e7 53       	subi	r30, 0x37	; 55
 16e:	f0 40       	sbci	r31, 0x00	; 0
 170:	08 c0       	rjmp	.+16     	; 0x182 <GetLedLetter+0x34>
 172:	90 ed       	ldi	r25, 0xD0	; 208
 174:	98 0f       	add	r25, r24
 176:	9a 30       	cpi	r25, 0x0A	; 10
 178:	30 f4       	brcc	.+12     	; 0x186 <GetLedLetter+0x38>
 17a:	e8 2f       	mov	r30, r24
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	ec 5e       	subi	r30, 0xEC	; 236
 180:	ff 4f       	sbci	r31, 0xFF	; 255
 182:	84 91       	lpm	r24, Z
 184:	08 95       	ret
 186:	8d 32       	cpi	r24, 0x2D	; 45
 188:	11 f0       	breq	.+4      	; 0x18e <GetLedLetter+0x40>
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	08 95       	ret
 18e:	80 e4       	ldi	r24, 0x40	; 64
 190:	08 95       	ret

00000192 <InitLedsScreen>:
 192:	85 b3       	in	r24, 0x15	; 21
 194:	81 7f       	andi	r24, 0xF1	; 241
 196:	85 bb       	out	0x15, r24	; 21
 198:	84 b3       	in	r24, 0x14	; 20
 19a:	8e 60       	ori	r24, 0x0E	; 14
 19c:	84 bb       	out	0x14, r24	; 20
 19e:	08 95       	ret

000001a0 <LedWriteWithDot>:
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	d6 2f       	mov	r29, r22
 1aa:	8c 01       	movw	r16, r24
 1ac:	0b 5f       	subi	r16, 0xFB	; 251
 1ae:	1f 4f       	sbci	r17, 0xFF	; 255
 1b0:	c0 e0       	ldi	r28, 0x00	; 0
 1b2:	f8 01       	movw	r30, r16
 1b4:	82 91       	ld	r24, -Z
 1b6:	8f 01       	movw	r16, r30
 1b8:	ca df       	rcall	.-108    	; 0x14e <GetLedLetter>
 1ba:	dc 13       	cpse	r29, r28
 1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <LedWriteWithDot+0x20>
 1be:	81 60       	ori	r24, 0x01	; 1
 1c0:	ab 98       	cbi	0x15, 3	; 21
 1c2:	98 e0       	ldi	r25, 0x08	; 8
 1c4:	80 ff       	sbrs	r24, 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <LedWriteWithDot+0x2c>
 1c8:	a9 9a       	sbi	0x15, 1	; 21
 1ca:	01 c0       	rjmp	.+2      	; 0x1ce <LedWriteWithDot+0x2e>
 1cc:	a9 98       	cbi	0x15, 1	; 21
 1ce:	ab 9a       	sbi	0x15, 3	; 21
 1d0:	ab 98       	cbi	0x15, 3	; 21
 1d2:	86 95       	lsr	r24
 1d4:	91 50       	subi	r25, 0x01	; 1
 1d6:	b1 f7       	brne	.-20     	; 0x1c4 <LedWriteWithDot+0x24>
 1d8:	cf 5f       	subi	r28, 0xFF	; 255
 1da:	c5 30       	cpi	r28, 0x05	; 5
 1dc:	51 f7       	brne	.-44     	; 0x1b2 <LedWriteWithDot+0x12>
 1de:	aa 9a       	sbi	0x15, 2	; 21
 1e0:	aa 98       	cbi	0x15, 2	; 21
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	1f 91       	pop	r17
 1e8:	0f 91       	pop	r16
 1ea:	08 95       	ret

000001ec <CopyString>:
 1ec:	9b 01       	movw	r18, r22
 1ee:	2b 5f       	subi	r18, 0xFB	; 251
 1f0:	3f 4f       	sbci	r19, 0xFF	; 255
 1f2:	fb 01       	movw	r30, r22
 1f4:	41 91       	ld	r20, Z+
 1f6:	bf 01       	movw	r22, r30
 1f8:	fc 01       	movw	r30, r24
 1fa:	41 93       	st	Z+, r20
 1fc:	cf 01       	movw	r24, r30
 1fe:	62 17       	cp	r22, r18
 200:	73 07       	cpc	r23, r19
 202:	b9 f7       	brne	.-18     	; 0x1f2 <CopyString+0x6>
 204:	08 95       	ret

00000206 <IntToString>:
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	fb 01       	movw	r30, r22
 210:	34 96       	adiw	r30, 0x04	; 4
 212:	ec 01       	movw	r28, r24
 214:	20 e0       	ldi	r18, 0x00	; 0
 216:	0a e0       	ldi	r16, 0x0A	; 10
 218:	10 e0       	ldi	r17, 0x00	; 0
 21a:	24 17       	cp	r18, r20
 21c:	30 f4       	brcc	.+12     	; 0x22a <IntToString+0x24>
 21e:	ce 01       	movw	r24, r28
 220:	b8 01       	movw	r22, r16
 222:	47 d0       	rcall	.+142    	; 0x2b2 <__udivmodhi4>
 224:	80 5d       	subi	r24, 0xD0	; 208
 226:	80 83       	st	Z, r24
 228:	31 97       	sbiw	r30, 0x01	; 1
 22a:	ce 01       	movw	r24, r28
 22c:	b8 01       	movw	r22, r16
 22e:	41 d0       	rcall	.+130    	; 0x2b2 <__udivmodhi4>
 230:	eb 01       	movw	r28, r22
 232:	2f 5f       	subi	r18, 0xFF	; 255
 234:	25 30       	cpi	r18, 0x05	; 5
 236:	89 f7       	brne	.-30     	; 0x21a <IntToString+0x14>
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	1f 91       	pop	r17
 23e:	0f 91       	pop	r16
 240:	08 95       	ret

00000242 <main>:
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	00 d0       	rcall	.+0      	; 0x248 <main+0x6>
 248:	00 d0       	rcall	.+0      	; 0x24a <main+0x8>
 24a:	1f 92       	push	r1
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
 250:	a0 df       	rcall	.-192    	; 0x192 <InitLedsScreen>
 252:	2e d0       	rcall	.+92     	; 0x2b0 <InitPwm>
 254:	45 df       	rcall	.-374    	; 0xe0 <KeysReaderInit>
 256:	78 94       	sei
 258:	82 e0       	ldi	r24, 0x02	; 2
 25a:	15 df       	rcall	.-470    	; 0x86 <AdcTurnOn>
 25c:	85 e0       	ldi	r24, 0x05	; 5
 25e:	e0 e6       	ldi	r30, 0x60	; 96
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	de 01       	movw	r26, r28
 264:	11 96       	adiw	r26, 0x01	; 1
 266:	01 90       	ld	r0, Z+
 268:	0d 92       	st	X+, r0
 26a:	8a 95       	dec	r24
 26c:	e1 f7       	brne	.-8      	; 0x266 <__stack+0x7>
 26e:	00 e0       	ldi	r16, 0x00	; 0
 270:	10 e0       	ldi	r17, 0x00	; 0
 272:	65 e6       	ldi	r22, 0x65	; 101
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	ce 01       	movw	r24, r28
 278:	01 96       	adiw	r24, 0x01	; 1
 27a:	b8 df       	rcall	.-144    	; 0x1ec <CopyString>
 27c:	45 e0       	ldi	r20, 0x05	; 5
 27e:	be 01       	movw	r22, r28
 280:	6f 5f       	subi	r22, 0xFF	; 255
 282:	7f 4f       	sbci	r23, 0xFF	; 255
 284:	c8 01       	movw	r24, r16
 286:	bf df       	rcall	.-130    	; 0x206 <IntToString>
 288:	6f ef       	ldi	r22, 0xFF	; 255
 28a:	ce 01       	movw	r24, r28
 28c:	01 96       	adiw	r24, 0x01	; 1
 28e:	88 df       	rcall	.-240    	; 0x1a0 <LedWriteWithDot>
 290:	52 df       	rcall	.-348    	; 0x136 <IsKeyModePressed>
 292:	88 23       	and	r24, r24
 294:	11 f0       	breq	.+4      	; 0x29a <__stack+0x3b>
 296:	0f 5f       	subi	r16, 0xFF	; 255
 298:	1f 4f       	sbci	r17, 0xFF	; 255
 29a:	51 df       	rcall	.-350    	; 0x13e <IsKeyRangePressed>
 29c:	88 23       	and	r24, r24
 29e:	11 f0       	breq	.+4      	; 0x2a4 <__stack+0x45>
 2a0:	01 50       	subi	r16, 0x01	; 1
 2a2:	11 09       	sbc	r17, r1
 2a4:	50 df       	rcall	.-352    	; 0x146 <IsKeyReservedPressed>
 2a6:	88 23       	and	r24, r24
 2a8:	21 f3       	breq	.-56     	; 0x272 <__stack+0x13>
 2aa:	0c 59       	subi	r16, 0x9C	; 156
 2ac:	1f 4f       	sbci	r17, 0xFF	; 255
 2ae:	e1 cf       	rjmp	.-62     	; 0x272 <__stack+0x13>

000002b0 <InitPwm>:
 2b0:	08 95       	ret

000002b2 <__udivmodhi4>:
 2b2:	aa 1b       	sub	r26, r26
 2b4:	bb 1b       	sub	r27, r27
 2b6:	51 e1       	ldi	r21, 0x11	; 17
 2b8:	07 c0       	rjmp	.+14     	; 0x2c8 <__udivmodhi4_ep>

000002ba <__udivmodhi4_loop>:
 2ba:	aa 1f       	adc	r26, r26
 2bc:	bb 1f       	adc	r27, r27
 2be:	a6 17       	cp	r26, r22
 2c0:	b7 07       	cpc	r27, r23
 2c2:	10 f0       	brcs	.+4      	; 0x2c8 <__udivmodhi4_ep>
 2c4:	a6 1b       	sub	r26, r22
 2c6:	b7 0b       	sbc	r27, r23

000002c8 <__udivmodhi4_ep>:
 2c8:	88 1f       	adc	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	5a 95       	dec	r21
 2ce:	a9 f7       	brne	.-22     	; 0x2ba <__udivmodhi4_loop>
 2d0:	80 95       	com	r24
 2d2:	90 95       	com	r25
 2d4:	bc 01       	movw	r22, r24
 2d6:	cd 01       	movw	r24, r26
 2d8:	08 95       	ret

000002da <_exit>:
 2da:	f8 94       	cli

000002dc <__stop_program>:
 2dc:	ff cf       	rjmp	.-2      	; 0x2dc <__stop_program>
